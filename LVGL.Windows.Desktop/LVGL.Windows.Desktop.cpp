/*
 * PROJECT:   LVGL ported to Windows Desktop
 * FILE:      LVGL.Windows.Desktop.cpp
 * PURPOSE:   Implementation for LVGL ported to Windows Desktop
 *
 * LICENSE:   The MIT License
 *
 * DEVELOPER: Mouri_Naruto (Mouri_Naruto AT Outlook.com)
 */

#include "LVGL.Windows.h"

#include <Windows.h>
#include <windowsx.h>

//#include <d3dkmthk.h>
//
//#include <dwmapi.h>
//#pragma comment(lib,"dwmapi.lib")

#include <cstdint>
#include <cstring>
#include <map>
#include <mutex>
#include <queue>
#include <utility>
#include <vector>

#if _MSC_VER >= 1200
 // Disable compilation warnings.
#pragma warning(push)
// nonstandard extension used : bit field types other than int
#pragma warning(disable:4214)
// 'conversion' conversion from 'type1' to 'type2', possible loss of data
#pragma warning(disable:4244)
#endif

#include "lvgl/lvgl.h"
#include "lv_examples/lv_examples.h"

#if _MSC_VER >= 1200
// Restore compilation warnings.
#pragma warning(pop)
#endif


const std::uint8_t SymbolFontResource[] =
{
    0x4f, 0x54, 0x54, 0x4f, 0x00, 0x09, 0x00, 0x80, 0x00, 0x03, 0x00, 0x10,
    0x43, 0x46, 0x46, 0x20, 0x1f, 0xd1, 0xd2, 0xa2, 0x00, 0x00, 0x05, 0x14,
    0x00, 0x00, 0x2c, 0xea, 0x4f, 0x53, 0x2f, 0x32, 0x49, 0x40, 0x6f, 0x39,
    0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x60, 0x63, 0x6d, 0x61, 0x70,
    0xe9, 0x98, 0xe2, 0x78, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x02, 0x72,
    0x68, 0x65, 0x61, 0x64, 0x1c, 0x76, 0xc4, 0x98, 0x00, 0x00, 0x00, 0x9c,
    0x00, 0x00, 0x00, 0x36, 0x68, 0x68, 0x65, 0x61, 0x08, 0x7f, 0x04, 0x57,
    0x00, 0x00, 0x00, 0xd4, 0x00, 0x00, 0x00, 0x24, 0x68, 0x6d, 0x74, 0x78,
    0xde, 0x10, 0x01, 0xca, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0xe8,
    0x6d, 0x61, 0x78, 0x70, 0x00, 0x3a, 0x50, 0x00, 0x00, 0x00, 0x00, 0xf8,
    0x00, 0x00, 0x00, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x10, 0x89, 0x2a, 0x39,
    0x00, 0x00, 0x01, 0x60, 0x00, 0x00, 0x01, 0x20, 0x70, 0x6f, 0x73, 0x74,
    0x00, 0x35, 0x00, 0x00, 0x00, 0x00, 0x04, 0xf4, 0x00, 0x00, 0x00, 0x20,
    0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x19, 0x88, 0xa7, 0x75,
    0x5f, 0x0f, 0x3c, 0xf5, 0x00, 0x09, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xdb, 0xff, 0x26, 0x94, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x66, 0x5a, 0x05,
    0xff, 0xf0, 0xff, 0x72, 0x05, 0x04, 0x03, 0x90, 0x00, 0x00, 0x00, 0x08,
    0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x03, 0x2c, 0xff, 0x2c, 0x00, 0x5c, 0x05, 0x00, 0xff, 0xf0, 0xff, 0xf0,
    0x05, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x50, 0x00,
    0x00, 0x3a, 0x00, 0x00, 0x00, 0x04, 0x03, 0xd4, 0x01, 0x90, 0x00, 0x05,
    0x00, 0x00, 0x02, 0x99, 0x02, 0xcc, 0x00, 0x00, 0x00, 0x8f, 0x02, 0x99,
    0x02, 0xcc, 0x00, 0x00, 0x01, 0xeb, 0x00, 0x33, 0x01, 0x09, 0x00, 0x00,
    0x02, 0x00, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x50, 0x66, 0x45, 0x64, 0x01, 0x80, 0xf0, 0x01, 0xf8, 0xa2,
    0x03, 0x2c, 0xff, 0x2c, 0x00, 0x5c, 0x03, 0x2c, 0x00, 0xd4, 0x00, 0x00,
    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0x02, 0xcd, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x4e, 0x00, 0x03,
    0x00, 0x01, 0x04, 0x09, 0x00, 0x01, 0x00, 0x38, 0x00, 0x00, 0x00, 0x03,
    0x00, 0x01, 0x04, 0x09, 0x00, 0x02, 0x00, 0x0c, 0x00, 0x3a, 0x00, 0x03,
    0x00, 0x01, 0x04, 0x09, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00, 0x03,
    0x00, 0x01, 0x04, 0x09, 0x00, 0x04, 0x00, 0x46, 0x00, 0x00, 0x00, 0x03,
    0x00, 0x01, 0x04, 0x09, 0x00, 0x05, 0x00, 0x72, 0x00, 0x60, 0x00, 0x03,
    0x00, 0x01, 0x04, 0x09, 0x00, 0x06, 0x00, 0x38, 0x00, 0x00, 0x00, 0x46,
    0x00, 0x6f, 0x00, 0x6e, 0x00, 0x74, 0x00, 0x20, 0x00, 0x41, 0x00, 0x77,
    0x00, 0x65, 0x00, 0x73, 0x00, 0x6f, 0x00, 0x6d, 0x00, 0x65, 0x00, 0x20,
    0x00, 0x35, 0x00, 0x20, 0x00, 0x46, 0x00, 0x72, 0x00, 0x65, 0x00, 0x65,
    0x00, 0x20, 0x00, 0x66, 0x00, 0x6f, 0x00, 0x72, 0x00, 0x20, 0x00, 0x4c,
    0x00, 0x56, 0x00, 0x47, 0x00, 0x4c, 0x00, 0x20, 0x00, 0x4d, 0x00, 0x65,
    0x00, 0x64, 0x00, 0x69, 0x00, 0x75, 0x00, 0x6d, 0x00, 0x3a, 0x00, 0x56,
    0x00, 0x65, 0x00, 0x72, 0x00, 0x73, 0x00, 0x69, 0x00, 0x6f, 0x00, 0x6e,
    0x00, 0x20, 0x00, 0x31, 0x00, 0x2e, 0x00, 0x30, 0x00, 0x30, 0x00, 0x56,
    0x00, 0x65, 0x00, 0x72, 0x00, 0x73, 0x00, 0x69, 0x00, 0x6f, 0x00, 0x6e,
    0x00, 0x20, 0x00, 0x31, 0x00, 0x2e, 0x00, 0x30, 0x00, 0x30, 0x00, 0x3b,
    0x00, 0x4d, 0x00, 0x61, 0x00, 0x72, 0x00, 0x63, 0x00, 0x68, 0x00, 0x20,
    0x00, 0x34, 0x00, 0x2c, 0x00, 0x20, 0x00, 0x32, 0x00, 0x30, 0x00, 0x32,
    0x00, 0x31, 0x00, 0x3b, 0x00, 0x46, 0x00, 0x6f, 0x00, 0x6e, 0x00, 0x74,
    0x00, 0x43, 0x00, 0x72, 0x00, 0x65, 0x00, 0x61, 0x00, 0x74, 0x00, 0x6f,
    0x00, 0x72, 0x00, 0x20, 0x00, 0x31, 0x00, 0x33, 0x00, 0x2e, 0x00, 0x30,
    0x00, 0x2e, 0x00, 0x30, 0x00, 0x2e, 0x00, 0x32, 0x00, 0x36, 0x00, 0x31,
    0x00, 0x33, 0x00, 0x20, 0x00, 0x36, 0x00, 0x34, 0x00, 0x2d, 0x00, 0x62,
    0x00, 0x69, 0x00, 0x74, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03,
    0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6c,
    0x00, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x01, 0x50,
    0x00, 0x00, 0x00, 0x50, 0x00, 0x40, 0x00, 0x05, 0x00, 0x10, 0xf0, 0x01,
    0xf0, 0x08, 0xf0, 0x0d, 0xf0, 0x11, 0xf0, 0x13, 0xf0, 0x15, 0xf0, 0x19,
    0xf0, 0x1c, 0xf0, 0x21, 0xf0, 0x28, 0xf0, 0x3e, 0xf0, 0x48, 0xf0, 0x4d,
    0xf0, 0x54, 0xf0, 0x68, 0xf0, 0x6e, 0xf0, 0x71, 0xf0, 0x74, 0xf0, 0x79,
    0xf0, 0x7b, 0xf0, 0x93, 0xf0, 0x95, 0xf0, 0xc5, 0xf0, 0xc7, 0xf0, 0xe7,
    0xf0, 0xea, 0xf0, 0xf3, 0xf1, 0x1c, 0xf1, 0x24, 0xf1, 0x5b, 0xf1, 0xeb,
    0xf2, 0x44, 0xf2, 0x87, 0xf2, 0x93, 0xf2, 0xed, 0xf3, 0x04, 0xf5, 0x5a,
    0xf7, 0xc2, 0xf8, 0xa2, 0xff, 0xff, 0x00, 0x00, 0xf0, 0x01, 0xf0, 0x08,
    0xf0, 0x0b, 0xf0, 0x11, 0xf0, 0x13, 0xf0, 0x15, 0xf0, 0x19, 0xf0, 0x1c,
    0xf0, 0x21, 0xf0, 0x26, 0xf0, 0x3e, 0xf0, 0x48, 0xf0, 0x4b, 0xf0, 0x51,
    0xf0, 0x67, 0xf0, 0x6e, 0xf0, 0x70, 0xf0, 0x74, 0xf0, 0x77, 0xf0, 0x7b,
    0xf0, 0x93, 0xf0, 0x95, 0xf0, 0xc4, 0xf0, 0xc7, 0xf0, 0xe7, 0xf0, 0xea,
    0xf0, 0xf3, 0xf1, 0x1c, 0xf1, 0x24, 0xf1, 0x5b, 0xf1, 0xeb, 0xf2, 0x40,
    0xf2, 0x87, 0xf2, 0x93, 0xf2, 0xed, 0xf3, 0x04, 0xf5, 0x5a, 0xf7, 0xc2,
    0xf8, 0xa2, 0xff, 0xff, 0x10, 0x00, 0x0f, 0xfa, 0x0f, 0xf8, 0x0f, 0xf5,
    0x0f, 0xf4, 0x0f, 0xf3, 0x0f, 0xf0, 0x0f, 0xee, 0x0f, 0xea, 0x0f, 0xe6,
    0x0f, 0xd1, 0x0f, 0xc8, 0x0f, 0xc6, 0x0f, 0xc3, 0x0f, 0xb1, 0x0f, 0xac,
    0x0f, 0xab, 0x0f, 0xa9, 0x0f, 0xa7, 0x0f, 0xa6, 0x0f, 0x8f, 0x0f, 0x8e,
    0x0f, 0x60, 0x0f, 0x5f, 0x0f, 0x40, 0x0f, 0x3e, 0x0f, 0x36, 0x0f, 0x0e,
    0x0f, 0x07, 0x0e, 0xd1, 0x0e, 0x42, 0x0d, 0xee, 0x0d, 0xac, 0x0d, 0xa1,
    0x0d, 0x48, 0x0d, 0x32, 0x0a, 0xdd, 0x08, 0x76, 0x07, 0x97, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x04, 0x00, 0x01, 0x01, 0x01,
    0x18, 0x46, 0x6f, 0x6e, 0x74, 0x41, 0x77, 0x65, 0x73, 0x6f, 0x6d, 0x65,
    0x35, 0x46, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72, 0x4c, 0x56, 0x47, 0x4c,
    0x00, 0x01, 0x01, 0x01, 0x3f, 0xf8, 0x51, 0x00, 0xf8, 0x52, 0x02, 0xf8,
    0x53, 0x03, 0xf8, 0x17, 0x04, 0xbd, 0x0c, 0x03, 0x8b, 0x0c, 0x04, 0x7b,
    0xfb, 0x22, 0x1c, 0x05, 0x04, 0xfa, 0x24, 0x05, 0x1e, 0x0a, 0x00, 0x09,
    0x76, 0x56, 0x2f, 0x1e, 0x0f, 0x1e, 0x0f, 0x1e, 0x0a, 0x00, 0x09, 0x76,
    0x56, 0x2f, 0x1e, 0x0f, 0x1e, 0x0f, 0x0c, 0x07, 0xf9, 0x39, 0x0f, 0xf9,
    0xac, 0x11, 0x94, 0x1c, 0x2c, 0xe1, 0x12, 0x00, 0x39, 0x02, 0x00, 0x01,
    0x00, 0x05, 0x00, 0x0b, 0x00, 0x10, 0x00, 0x15, 0x00, 0x1d, 0x00, 0x20,
    0x00, 0x24, 0x00, 0x2c, 0x00, 0x31, 0x00, 0x35, 0x00, 0x3e, 0x00, 0x48,
    0x00, 0x50, 0x00, 0x55, 0x00, 0x61, 0x00, 0x65, 0x00, 0x6a, 0x00, 0x6e,
    0x00, 0x79, 0x00, 0x7e, 0x00, 0x89, 0x00, 0x95, 0x00, 0x98, 0x00, 0xa0,
    0x00, 0xb3, 0x00, 0xb9, 0x00, 0xc2, 0x00, 0xcd, 0x00, 0xd4, 0x00, 0xda,
    0x00, 0xe0, 0x00, 0xe5, 0x00, 0xe8, 0x00, 0xec, 0x00, 0xf0, 0x00, 0xf4,
    0x00, 0xf9, 0x00, 0xfd, 0x01, 0x05, 0x01, 0x12, 0x01, 0x16, 0x01, 0x1a,
    0x01, 0x25, 0x01, 0x39, 0x01, 0x44, 0x01, 0x52, 0x01, 0x5e, 0x01, 0x61,
    0x01, 0x6a, 0x01, 0x72, 0x01, 0x75, 0x01, 0x7e, 0x01, 0x84, 0x01, 0x8d,
    0x01, 0x92, 0x01, 0xac, 0x01, 0xc8, 0x66, 0x69, 0x6c, 0x6d, 0x74, 0x68,
    0x6c, 0x69, 0x73, 0x74, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x74, 0x69, 0x6d,
    0x65, 0x73, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6f, 0x66, 0x66, 0x63, 0x6f,
    0x67, 0x68, 0x6f, 0x6d, 0x65, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
    0x64, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x73, 0x79, 0x6e, 0x63, 0x76, 0x6f,
    0x6c, 0x75, 0x6d, 0x65, 0x6f, 0x66, 0x66, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
    0x65, 0x64, 0x6f, 0x77, 0x6e, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x75,
    0x70, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x74, 0x65, 0x70, 0x62, 0x61,
    0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x70, 0x6c, 0x61, 0x79, 0x70, 0x61,
    0x75, 0x73, 0x65, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x74, 0x65, 0x70, 0x66,
    0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x63,
    0x68, 0x65, 0x76, 0x72, 0x6f, 0x6e, 0x6c, 0x65, 0x66, 0x74, 0x63, 0x68,
    0x65, 0x76, 0x72, 0x6f, 0x6e, 0x72, 0x69, 0x67, 0x68, 0x74, 0x65, 0x79,
    0x65, 0x65, 0x79, 0x65, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x78, 0x63,
    0x6c, 0x61, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x61,
    0x6e, 0x67, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x63, 0x68,
    0x65, 0x76, 0x72, 0x6f, 0x6e, 0x75, 0x70, 0x63, 0x68, 0x65, 0x76, 0x72,
    0x6f, 0x6e, 0x64, 0x6f, 0x77, 0x6e, 0x72, 0x65, 0x74, 0x77, 0x65, 0x65,
    0x74, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x75, 0x70, 0x6c, 0x6f, 0x61,
    0x64, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x63, 0x75, 0x74, 0x63, 0x6f, 0x70,
    0x79, 0x73, 0x61, 0x76, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x70, 0x61, 0x73,
    0x74, 0x65, 0x62, 0x65, 0x6c, 0x6c, 0x6b, 0x65, 0x79, 0x62, 0x6f, 0x61,
    0x72, 0x64, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
    0x72, 0x6f, 0x77, 0x66, 0x69, 0x6c, 0x65, 0x77, 0x69, 0x66, 0x69, 0x62,
    0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x66, 0x75, 0x6c, 0x6c, 0x62, 0x61,
    0x74, 0x74, 0x65, 0x72, 0x79, 0x74, 0x68, 0x72, 0x65, 0x65, 0x71, 0x75,
    0x61, 0x72, 0x74, 0x65, 0x72, 0x73, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72,
    0x79, 0x68, 0x61, 0x6c, 0x66, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79,
    0x71, 0x75, 0x61, 0x72, 0x74, 0x65, 0x72, 0x62, 0x61, 0x74, 0x74, 0x65,
    0x72, 0x79, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x75, 0x73, 0x62, 0x62, 0x6c,
    0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x74, 0x72, 0x61, 0x73, 0x68,
    0x61, 0x6c, 0x74, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x70,
    0x61, 0x63, 0x65, 0x73, 0x64, 0x63, 0x61, 0x72, 0x64, 0x67, 0x6c, 0x79,
    0x70, 0x68, 0x31, 0x34, 0x31, 0x35, 0x31, 0x2e, 0x30, 0x30, 0x30, 0x46,
    0x6f, 0x6e, 0x74, 0x20, 0x41, 0x77, 0x65, 0x73, 0x6f, 0x6d, 0x65, 0x20,
    0x35, 0x20, 0x46, 0x72, 0x65, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x4c,
    0x56, 0x46, 0x6f, 0x6e, 0x74, 0x20, 0x41, 0x77, 0x65, 0x73, 0x6f, 0x6d,
    0x65, 0x20, 0x35, 0x20, 0x46, 0x72, 0x65, 0x65, 0x20, 0x66, 0x6f, 0x72,
    0x20, 0x4c, 0x56, 0x47, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d,
    0x01, 0x87, 0x01, 0x88, 0x01, 0x89, 0x01, 0x8a, 0x01, 0x8b, 0x01, 0x8c,
    0x01, 0x8d, 0x01, 0x8e, 0x01, 0x8f, 0x01, 0x90, 0x01, 0x91, 0x01, 0x92,
    0x01, 0x93, 0x01, 0x94, 0x01, 0x95, 0x01, 0x96, 0x01, 0x97, 0x01, 0x98,
    0x01, 0x99, 0x01, 0x9a, 0x01, 0x9b, 0x01, 0x9c, 0x00, 0x0c, 0x00, 0xa6,
    0x01, 0x9d, 0x01, 0x9e, 0x01, 0x9f, 0x01, 0xa0, 0x01, 0xa1, 0x01, 0xa2,
    0x01, 0xa3, 0x01, 0xa4, 0x01, 0xa5, 0x01, 0xa6, 0x01, 0xa7, 0x01, 0xa8,
    0x01, 0xa9, 0x01, 0xaa, 0x01, 0xab, 0x01, 0xac, 0x01, 0xad, 0x01, 0xae,
    0x01, 0xaf, 0x01, 0xb0, 0x01, 0xb1, 0x01, 0xb2, 0x01, 0xb3, 0x01, 0xb4,
    0x01, 0xb5, 0x01, 0xb6, 0x01, 0xb7, 0x01, 0xb8, 0x01, 0xb9, 0x01, 0xba,
    0x01, 0xbb, 0x01, 0xbc, 0x00, 0x3a, 0x02, 0x00, 0x01, 0x00, 0x04, 0x00,
    0x88, 0x02, 0x53, 0x03, 0xee, 0x04, 0x49, 0x04, 0xe5, 0x05, 0xe6, 0x06,
    0xe4, 0x08, 0x01, 0x09, 0x1e, 0x09, 0xa3, 0x0a, 0xf8, 0x0b, 0x4a, 0x0b,
    0xf7, 0x0d, 0x84, 0x0e, 0x26, 0x0e, 0x79, 0x0e, 0xb4, 0x0f, 0x3b, 0x0f,
    0x82, 0x0f, 0xd6, 0x10, 0x53, 0x10, 0xaf, 0x11, 0x0c, 0x11, 0x97, 0x11,
    0xdc, 0x12, 0xbe, 0x13, 0xee, 0x14, 0x95, 0x15, 0x7d, 0x15, 0xd9, 0x16,
    0x35, 0x17, 0x47, 0x17, 0x96, 0x18, 0xbe, 0x19, 0x27, 0x1a, 0x38, 0x1a,
    0xe4, 0x1b, 0x9e, 0x1c, 0x13, 0x1d, 0x03, 0x1d, 0xc8, 0x1f, 0xd8, 0x20,
    0x27, 0x20, 0x90, 0x21, 0x7f, 0x22, 0x04, 0x22, 0x8a, 0x23, 0x10, 0x23,
    0x96, 0x24, 0x10, 0x25, 0x8b, 0x26, 0x3f, 0x27, 0x71, 0x27, 0xc6, 0x28,
    0x80, 0x28, 0xde, 0x29, 0x51, 0xfe, 0x34, 0x0e, 0xa7, 0xfa, 0x94, 0xf9,
    0xd4, 0x15, 0x8b, 0xa0, 0x82, 0x9c, 0x7a, 0x98, 0x7a, 0x98, 0x77, 0x8e,
    0x76, 0x84, 0x08, 0xfd, 0x14, 0xfb, 0x50, 0x05, 0x6e, 0x82, 0x7c, 0x77,
    0x8b, 0x6c, 0x08, 0xfc, 0xa0, 0x07, 0x74, 0x90, 0x76, 0x8e, 0x77, 0x8b,
    0x56, 0x8b, 0x5d, 0x7f, 0x66, 0x72, 0x66, 0x72, 0x78, 0x6d, 0x8b, 0x67,
    0x8b, 0x67, 0x9e, 0x6d, 0xb0, 0x72, 0xb0, 0x72, 0xb9, 0x7f, 0xc0, 0x8b,
    0xc0, 0x8b, 0xb9, 0x97, 0xb0, 0xa4, 0xb0, 0xa4, 0x9e, 0xa9, 0x8b, 0xaf,
    0x08, 0xf8, 0x68, 0x07, 0xf8, 0x94, 0xf7, 0x2a, 0x05, 0xfc, 0x06, 0x07,
    0x74, 0x90, 0x76, 0x8e, 0x77, 0x8b, 0x56, 0x8b, 0x5d, 0x7f, 0x66, 0x72,
    0x66, 0x72, 0x78, 0x6d, 0x8b, 0x67, 0x8b, 0x67, 0x9e, 0x6d, 0xb0, 0x72,
    0xb0, 0x72, 0xb9, 0x7f, 0xc0, 0x8b, 0xc0, 0x8b, 0xb9, 0x97, 0xb0, 0xa4,
    0xb0, 0xa4, 0x9e, 0xa9, 0x8b, 0xaf, 0x08, 0x0e, 0xa7, 0xfa, 0x64, 0xf9,
    0x94, 0x15, 0x7b, 0x63, 0x06, 0x8b, 0x7b, 0x83, 0x83, 0x7b, 0x8b, 0x08,
    0x3b, 0x06, 0x7b, 0x8b, 0x83, 0x93, 0x8b, 0x9b, 0x08, 0xb3, 0xfd, 0x14,
    0x63, 0x07, 0x8b, 0x7b, 0x83, 0x83, 0x7b, 0x8b, 0x08, 0x3b, 0x06, 0x7b,
    0x8b, 0x83, 0x93, 0x8b, 0x9b, 0x08, 0xb3, 0x7b, 0x07, 0x7e, 0x8b, 0x7f,
    0x86, 0x82, 0x82, 0x82, 0x82, 0x86, 0x7f, 0x8b, 0x7e, 0x08, 0xfd, 0x34,
    0x07, 0x8b, 0x7e, 0x90, 0x7f, 0x94, 0x82, 0x94, 0x82, 0x97, 0x86, 0x98,
    0x8b, 0x08, 0x9b, 0xb3, 0x06, 0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b, 0x08,
    0xdb, 0x06, 0x9b, 0x8b, 0x93, 0x83, 0x8b, 0x7b, 0x08, 0x63, 0xf9, 0x14,
    0xb3, 0x07, 0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b, 0x08, 0xdb, 0x06, 0x9b,
    0x8b, 0x93, 0x83, 0x8b, 0x7b, 0x08, 0x63, 0x9b, 0x07, 0x98, 0x8b, 0x97,
    0x90, 0x94, 0x94, 0x94, 0x94, 0x90, 0x97, 0x8b, 0x98, 0x08, 0xf9, 0x34,
    0x07, 0x8b, 0x98, 0x86, 0x97, 0x82, 0x94, 0x82, 0x94, 0x7f, 0x90, 0x7e,
    0x8b, 0x08, 0xfd, 0xa4, 0xfc, 0xfc, 0x15, 0x8b, 0x7b, 0x83, 0x83, 0x7b,
    0x8b, 0x08, 0x3b, 0x06, 0x7b, 0x8b, 0x83, 0x93, 0x8b, 0x9b, 0x08, 0xdb,
    0x07, 0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b, 0x08, 0xdb, 0x06, 0x9b, 0x8b,
    0x93, 0x83, 0x8b, 0x7b, 0x08, 0xf7, 0x04, 0x04, 0x8b, 0x7b, 0x83, 0x83,
    0x7b, 0x8b, 0x08, 0x3b, 0x06, 0x7b, 0x8b, 0x83, 0x93, 0x8b, 0x9b, 0x08,
    0xdb, 0x07, 0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b, 0x08, 0xdb, 0x06, 0x9b,
    0x8b, 0x93, 0x83, 0x8b, 0x7b, 0x08, 0xf7, 0x04, 0x04, 0x8b, 0x7b, 0x83,
    0x83, 0x7b, 0x8b, 0x08, 0x3b, 0x06, 0x7b, 0x8b, 0x83, 0x93, 0x8b, 0x9b,
    0x08, 0xdb, 0x07, 0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b, 0x08, 0xdb, 0x06,
    0x9b, 0x8b, 0x93, 0x83, 0x8b, 0x7b, 0x08, 0xf8, 0xb4, 0xfc, 0x84, 0x15,
    0x8b, 0x7b, 0x83, 0x83, 0x7b, 0x8b, 0x08, 0xfc, 0x24, 0x06, 0x7b, 0x8b,
    0x83, 0x93, 0x8b, 0x9b, 0x08, 0xf7, 0x54, 0x07, 0x8b, 0x9b, 0x93, 0x93,
    0x9b, 0x8b, 0x08, 0xf8, 0x24, 0x06, 0x9b, 0x8b, 0x93, 0x83, 0x8b, 0x7b,
    0x08, 0xf7, 0x24, 0x04, 0x8b, 0x7b, 0x83, 0x83, 0x7b, 0x8b, 0x08, 0xfc,
    0x24, 0x06, 0x7b, 0x8b, 0x83, 0x93, 0x8b, 0x9b, 0x08, 0xf7, 0x54, 0x07,
    0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b, 0x08, 0xf8, 0x24, 0x06, 0x9b, 0x8b,
    0x93, 0x83, 0x8b, 0x7b, 0x08, 0xf7, 0x74, 0xfc, 0x84, 0x15, 0x8b, 0x7b,
    0x83, 0x83, 0x7b, 0x8b, 0x08, 0x3b, 0x06, 0x7b, 0x8b, 0x83, 0x93, 0x8b,
    0x9b, 0x08, 0xdb, 0x07, 0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b, 0x08, 0xdb,
    0x06, 0x9b, 0x8b, 0x93, 0x83, 0x8b, 0x7b, 0x08, 0xf7, 0x04, 0x04, 0x8b,
    0x7b, 0x83, 0x83, 0x7b, 0x8b, 0x08, 0x3b, 0x06, 0x7b, 0x8b, 0x83, 0x93,
    0x8b, 0x9b, 0x08, 0xdb, 0x07, 0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b, 0x08,
    0xdb, 0x06, 0x9b, 0x8b, 0x93, 0x83, 0x8b, 0x7b, 0x08, 0xf7, 0x04, 0x04,
    0x8b, 0x7b, 0x83, 0x83, 0x7b, 0x8b, 0x08, 0x3b, 0x06, 0x7b, 0x8b, 0x83,
    0x93, 0x8b, 0x9b, 0x08, 0xdb, 0x07, 0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b,
    0x08, 0xdb, 0x06, 0x9b, 0x8b, 0x93, 0x83, 0x8b, 0x7b, 0x08, 0x0e, 0xa7,
    0xf7, 0xbe, 0xf8, 0x64, 0x15, 0x8b, 0x98, 0x86, 0x97, 0x82, 0x94, 0x82,
    0x94, 0x7f, 0x90, 0x7e, 0x8b, 0x08, 0xfb, 0x5e, 0x06, 0x7e, 0x8b, 0x7f,
    0x86, 0x82, 0x82, 0x82, 0x82, 0x86, 0x7f, 0x8b, 0x7e, 0x08, 0xfb, 0x34,
    0x07, 0x8b, 0x7e, 0x90, 0x7f, 0x94, 0x82, 0x94, 0x82, 0x97, 0x86, 0x98,
    0x8b, 0x08, 0xf7, 0x5e, 0x06, 0x98, 0x8b, 0x97, 0x90, 0x94, 0x94, 0x94,
    0x94, 0x90, 0x97, 0x8b, 0x98, 0x08, 0xfb, 0xbe, 0xfb, 0x34, 0x15, 0xfb,
    0x34, 0x07, 0x8b, 0x7e, 0x90, 0x7f, 0x94, 0x82, 0x94, 0x82, 0x97, 0x86,
    0x98, 0x8b, 0x08, 0xf7, 0x5e, 0x06, 0x98, 0x8b, 0x97, 0x90, 0x94, 0x94,
    0x94, 0x94, 0x90, 0x97, 0x8b, 0x98, 0x08, 0xf7, 0x34, 0x07, 0x8b, 0x98,
    0x86, 0x97, 0x82, 0x94, 0x82, 0x94, 0x7f, 0x90, 0x7e, 0x8b, 0x08, 0xfb,
    0x5e, 0x06, 0x7e, 0x8b, 0x7f, 0x86, 0x82, 0x82, 0x82, 0x82, 0x86, 0x7f,
    0x8b, 0x7e, 0x08, 0xf7, 0x8e, 0xf9, 0x44, 0x15, 0xfb, 0x5e, 0x06, 0x7e,
    0x8b, 0x7f, 0x86, 0x82, 0x82, 0x82, 0x82, 0x86, 0x7f, 0x8b, 0x7e, 0x08,
    0xfb, 0x34, 0x07, 0x8b, 0x7e, 0x90, 0x7f, 0x94, 0x82, 0x94, 0x82, 0x97,
    0x86, 0x98, 0x8b, 0x08, 0xf7, 0x5e, 0x06, 0x98, 0x8b, 0x97, 0x90, 0x94,
    0x94, 0x94, 0x94, 0x90, 0x97, 0x8b, 0x98, 0x08, 0xf7, 0x34, 0x07, 0x8b,
    0x98, 0x86, 0x97, 0x82, 0x94, 0x82, 0x94, 0x7f, 0x90, 0x7e, 0x8b, 0x08,
    0xf7, 0x34, 0xfe, 0x14, 0x15, 0xf8, 0xca, 0x06, 0x98, 0x8b, 0x97, 0x90,
    0x94, 0x94, 0x94, 0x94, 0x90, 0x97, 0x8b, 0x98, 0x08, 0xf7, 0x34, 0x07,
    0x8b, 0x98, 0x86, 0x97, 0x82, 0x94, 0x82, 0x94, 0x7f, 0x90, 0x7e, 0x8b,
    0x08, 0xfc, 0xca, 0x06, 0x7e, 0x8b, 0x7f, 0x86, 0x82, 0x82, 0x82, 0x82,
    0x86, 0x7f, 0x8b, 0x7e, 0x08, 0xfb, 0x34, 0x07, 0x8b, 0x7e, 0x90, 0x7f,
    0x94, 0x82, 0x94, 0x82, 0x97, 0x86, 0x98, 0x8b, 0x08, 0x5b, 0xf9, 0xe4,
    0x15, 0xfb, 0x34, 0x07, 0x8b, 0x7e, 0x90, 0x7f, 0x94, 0x82, 0x94, 0x82,
    0x97, 0x86, 0x98, 0x8b, 0x08, 0xf8, 0xca, 0x06, 0x98, 0x8b, 0x97, 0x90,
    0x94, 0x94, 0x94, 0x94, 0x90, 0x97, 0x8b, 0x98, 0x08, 0xf7, 0x34, 0x07,
    0x8b, 0x98, 0x86, 0x97, 0x82, 0x94, 0x82, 0x94, 0x7f, 0x90, 0x7e, 0x8b,
    0x08, 0xfc, 0xca, 0x06, 0x7e, 0x8b, 0x7f, 0x86, 0x82, 0x82, 0x82, 0x82,
    0x86, 0x7f, 0x8b, 0x7e, 0x08, 0xbb, 0xfc, 0xa4, 0x15, 0xf8, 0xca, 0x06,
    0x98, 0x8b, 0x97, 0x90, 0x94, 0x94, 0x94, 0x94, 0x90, 0x97, 0x8b, 0x98,
    0x08, 0xf7, 0x34, 0x07, 0x8b, 0x98, 0x86, 0x97, 0x82, 0x94, 0x82, 0x94,
    0x7f, 0x90, 0x7e, 0x8b, 0x08, 0xfc, 0xca, 0x06, 0x7e, 0x8b, 0x7f, 0x86,
    0x82, 0x82, 0x82, 0x82, 0x86, 0x7f, 0x8b, 0x7e, 0x08, 0xfb, 0x34, 0x07,
    0x8b, 0x7e, 0x90, 0x7f, 0x94, 0x82, 0x94, 0x82, 0x97, 0x86, 0x98, 0x8b,
    0x08, 0x0e, 0xa7, 0xf7, 0xf0, 0x9d, 0x15, 0x94, 0x80, 0x97, 0x86, 0x9a,
    0x8b, 0x9a, 0x8b, 0x97, 0x90, 0x94, 0x96, 0x08, 0xf8, 0xe2, 0xf8, 0xe0,
    0x05, 0x94, 0x94, 0x90, 0x97, 0x8b, 0x9a, 0x8b, 0x9a, 0x86, 0x97, 0x82,
    0x94, 0x08, 0x41, 0xd3, 0x05, 0x82, 0x96, 0x7f, 0x90, 0x7d, 0x8b, 0x7d,
    0x8b, 0x7f, 0x86, 0x80, 0x80, 0x08, 0xfc, 0x74, 0xfc, 0x74, 0xfb, 0x74,
    0xf7, 0x74, 0x05, 0x80, 0x96, 0x7f, 0x90, 0x7d, 0x8b, 0x7d, 0x8b, 0x7f,
    0x86, 0x82, 0x80, 0x08, 0x41, 0x43, 0x05, 0x82, 0x82, 0x86, 0x7f, 0x8b,
    0x7c, 0x8b, 0x7c, 0x90, 0x7f, 0x94, 0x82, 0x08, 0x0e, 0xfb, 0xb8, 0xf8,
    0x7a, 0xf8, 0x14, 0x15, 0xf7, 0x5c, 0xf7, 0x5c, 0x05, 0x97, 0x97, 0x91,
    0x9a, 0x8b, 0x9c, 0x8b, 0x9c, 0x85, 0x9b, 0x7f, 0x98, 0x08, 0x5f, 0xb7,
    0x05, 0x7e, 0x97, 0x7b, 0x91, 0x7a, 0x8b, 0x7a, 0x8b, 0x7c, 0x85, 0x7f,
    0x7f, 0x08, 0xfb, 0x5c, 0xfb, 0x5c, 0xfb, 0x5c, 0xf7, 0x5c, 0x05, 0x7f,
    0x97, 0x7c, 0x91, 0x7a, 0x8b, 0x7a, 0x8b, 0x7b, 0x85, 0x7e, 0x7f, 0x08,
    0x5f, 0x5f, 0x05, 0x7f, 0x7e, 0x85, 0x7b, 0x8b, 0x7a, 0x8b, 0x7a, 0x91,
    0x7c, 0x97, 0x7f, 0x08, 0xf7, 0x5c, 0xfb, 0x5c, 0xfb, 0x5c, 0xfb, 0x5c,
    0x05, 0x7f, 0x7f, 0x85, 0x7c, 0x8b, 0x7a, 0x8b, 0x7a, 0x91, 0x7b, 0x97,
    0x7e, 0x08, 0xb7, 0x5f, 0x05, 0x98, 0x7f, 0x9b, 0x85, 0x9c, 0x8b, 0x9c,
    0x8b, 0x9a, 0x91, 0x97, 0x97, 0x08, 0xf7, 0x5c, 0xf7, 0x5c, 0xf7, 0x5c,
    0xfb, 0x5c, 0x05, 0x97, 0x7f, 0x9a, 0x85, 0x9c, 0x8b, 0x9c, 0x8b, 0x9b,
    0x91, 0x98, 0x97, 0x08, 0xb7, 0xb7, 0x05, 0x97, 0x98, 0x91, 0x9b, 0x8b,
    0x9c, 0x8b, 0x9c, 0x85, 0x9a, 0x7f, 0x97, 0x08, 0x0e, 0xa7, 0xf9, 0xb4,
    0xf9, 0xa8, 0x15, 0x7f, 0x93, 0x7e, 0x8d, 0x7d, 0x88, 0x7d, 0x88, 0x81,
    0x83, 0x84, 0x7f, 0x08, 0x6b, 0x53, 0x05, 0x86, 0x80, 0x89, 0x80, 0x8e,
    0x7f, 0x8e, 0x7f, 0x91, 0x82, 0x94, 0x84, 0xb6, 0x6b, 0xac, 0x63, 0xa3,
    0x5c, 0xa3, 0x5c, 0x97, 0x59, 0x8b, 0x57, 0x8b, 0x2c, 0x6a, 0x3b, 0x49,
    0x4a, 0x49, 0x4a, 0x3c, 0x6a, 0x2f, 0x8b, 0x2e, 0x8b, 0x3b, 0xac, 0x4a,
    0xcd, 0x4a, 0xcd, 0x6a, 0xda, 0x8b, 0xe7, 0x08, 0x8b, 0xa7, 0x8e, 0xa6,
    0x92, 0xa5, 0x92, 0xa5, 0x94, 0xa3, 0x96, 0xa2, 0x96, 0xa2, 0x99, 0xa0,
    0x9c, 0x9e, 0x9c, 0x9e, 0x9e, 0x9d, 0xa0, 0x9b, 0x94, 0x92, 0x91, 0x94,
    0x8e, 0x97, 0x8e, 0x97, 0x89, 0x96, 0x86, 0x96, 0x08, 0x6b, 0xc3, 0x05,
    0x84, 0x97, 0x81, 0x93, 0x7d, 0x8e, 0x7d, 0x8e, 0x7e, 0x89, 0x7f, 0x83,
    0x60, 0x6c, 0x67, 0x67, 0x6c, 0x62, 0x6c, 0x62, 0x73, 0x5d, 0x7a, 0x58,
    0x7a, 0x58, 0x82, 0x57, 0x8b, 0x54, 0x8b, 0x30, 0xa1, 0x38, 0xb8, 0x3f,
    0xb8, 0x3f, 0xc7, 0x4f, 0xd7, 0x5f, 0xd7, 0x5f, 0xde, 0x75, 0xe4, 0x8b,
    0x08, 0xf7, 0x1d, 0x8b, 0xf7, 0x09, 0xbb, 0xec, 0xec, 0xec, 0xec, 0xbb,
    0xf7, 0x09, 0x8b, 0xf7, 0x1d, 0x8b, 0xdc, 0x78, 0xd8, 0x66, 0xd2, 0x66,
    0xd2, 0x58, 0xc6, 0x4b, 0xb8, 0x08, 0xfb, 0x64, 0xfc, 0x38, 0x15, 0xf8,
    0x74, 0x07, 0x8b, 0x98, 0x86, 0x97, 0x82, 0x94, 0x82, 0x94, 0x7f, 0x90,
    0x7e, 0x8b, 0x08, 0x4b, 0x06, 0x7e, 0x8b, 0x7f, 0x86, 0x82, 0x82, 0x82,
    0x82, 0x86, 0x7f, 0x8b, 0x7e, 0x08, 0xfc, 0x74, 0x07, 0x8b, 0x7e, 0x90,
    0x7f, 0x94, 0x82, 0x94, 0x82, 0x97, 0x86, 0x98, 0x8b, 0x08, 0xcb, 0x06,
    0x98, 0x8b, 0x97, 0x90, 0x94, 0x94, 0x94, 0x94, 0x90, 0x97, 0x8b, 0x98,
    0x08, 0x0e, 0xa7, 0xfa, 0x62, 0xf7, 0x9c, 0x15, 0x37, 0xbd, 0x05, 0x93,
    0xba, 0x8b, 0xb9, 0x83, 0xba, 0x08, 0xdf, 0xbd, 0x05, 0x97, 0x90, 0x8f,
    0x95, 0x87, 0x98, 0x74, 0xd2, 0x67, 0xc9, 0x58, 0xc2, 0x83, 0x94, 0x81,
    0x8d, 0x7f, 0x86, 0x08, 0x37, 0x59, 0x05, 0x67, 0xaa, 0x62, 0xa2, 0x5e,
    0x9b, 0x08, 0xed, 0x07, 0x8b, 0x98, 0x85, 0x93, 0x7f, 0x8e, 0x42, 0x9b,
    0x41, 0x8b, 0x42, 0x7b, 0x7f, 0x88, 0x85, 0x83, 0x8b, 0x7e, 0x08, 0x29,
    0x07, 0x5e, 0x7b, 0x62, 0x74, 0x67, 0x6c, 0x08, 0x37, 0xbb, 0x05, 0x7f,
    0x92, 0x81, 0x89, 0x83, 0x82, 0x58, 0x54, 0x67, 0x4d, 0x74, 0x44, 0x87,
    0x7e, 0x8f, 0x81, 0x97, 0x86, 0x08, 0xdf, 0x59, 0x05, 0x87, 0x74, 0x89,
    0x74, 0x8b, 0x73, 0x8b, 0x73, 0x8d, 0x74, 0x8f, 0x74, 0x08, 0x37, 0x59,
    0x05, 0x7f, 0x84, 0x87, 0x82, 0x8f, 0x7f, 0xa2, 0x44, 0xaf, 0x4d, 0xbe,
    0x54, 0x93, 0x82, 0x95, 0x89, 0x97, 0x90, 0x08, 0xdf, 0xbd, 0x05, 0xaf,
    0x6c, 0xb4, 0x74, 0xb8, 0x7b, 0x08, 0x29, 0x07, 0x8b, 0x7e, 0x92, 0x83,
    0x98, 0x88, 0xd3, 0x7b, 0xd4, 0x8b, 0xd4, 0x9b, 0x97, 0x8e, 0x91, 0x93,
    0x8b, 0x98, 0x08, 0xed, 0x07, 0xb8, 0x9b, 0xb4, 0xa2, 0xaf, 0xaa, 0x08,
    0xe1, 0x59, 0x05, 0x96, 0x86, 0x94, 0x8d, 0x93, 0x94, 0xbe, 0xc2, 0xaf,
    0xc9, 0xa2, 0xd2, 0x8f, 0x98, 0x87, 0x95, 0x7f, 0x90, 0x08, 0xfc, 0x62,
    0x63, 0x15, 0x5f, 0x8b, 0x65, 0x9b, 0x6c, 0xaa, 0x6c, 0xaa, 0x7b, 0xb1,
    0x8b, 0xb7, 0x8b, 0xb7, 0x9b, 0xb1, 0xaa, 0xaa, 0xaa, 0xaa, 0xb1, 0x9b,
    0xb7, 0x8b, 0xb7, 0x8b, 0xb1, 0x7b, 0xaa, 0x6c, 0xaa, 0x6c, 0x9b, 0x65,
    0x8b, 0x5f, 0x8b, 0x5f, 0x7b, 0x65, 0x6c, 0x6c, 0x6c, 0x6c, 0x65, 0x7b,
    0x5f, 0x8b, 0x08, 0x0e, 0xf7, 0x30, 0xf8, 0xc4, 0xf8, 0xec, 0x15, 0xfc,
    0x04, 0xfb, 0xc4, 0x05, 0xfb, 0xdc, 0x07, 0x8b, 0x82, 0x8e, 0x83, 0x91,
    0x85, 0x91, 0x85, 0x93, 0x88, 0x94, 0x8b, 0x08, 0xf7, 0x74, 0x06, 0x94,
    0x8b, 0x93, 0x8e, 0x91, 0x92, 0x91, 0x92, 0x8e, 0x92, 0x8b, 0x93, 0x08,
    0xf7, 0x54, 0x07, 0x8b, 0x94, 0x8e, 0x93, 0x91, 0x91, 0x91, 0x91, 0x93,
    0x8e, 0x94, 0x8b, 0x08, 0xf7, 0x14, 0x06, 0x90, 0x8b, 0x91, 0x8a, 0x90,
    0x88, 0x90, 0x88, 0x8f, 0x87, 0x8e, 0x86, 0x8e, 0x86, 0x8c, 0x85, 0x8b,
    0x86, 0x08, 0xfb, 0x54, 0x07, 0x8b, 0x83, 0x8e, 0x84, 0x91, 0x84, 0x91,
    0x84, 0x93, 0x88, 0x94, 0x8b, 0x08, 0xf7, 0x74, 0x06, 0x94, 0x8b, 0x93,
    0x8e, 0x91, 0x91, 0x91, 0x91, 0x8e, 0x93, 0x8b, 0x94, 0x08, 0xf7, 0xdc,
    0x07, 0xfc, 0x04, 0xf7, 0xc4, 0x05, 0x86, 0x8e, 0x85, 0x8c, 0x86, 0x8b,
    0x86, 0x8b, 0x85, 0x8a, 0x86, 0x88, 0x08, 0xf8, 0xdc, 0xfb, 0x62, 0x15,
    0xfb, 0x3c, 0xf7, 0x1c, 0x05, 0xf7, 0xaa, 0x07, 0x8b, 0x92, 0x89, 0x90,
    0x86, 0x90, 0x86, 0x90, 0x86, 0x8d, 0x84, 0x8b, 0x08, 0xfb, 0x04, 0x06,
    0x84, 0x8b, 0x86, 0x89, 0x86, 0x86, 0x86, 0x86, 0x89, 0x86, 0x8b, 0x84,
    0x08, 0xfb, 0x26, 0x07, 0xfb, 0x48, 0xf7, 0x28, 0x05, 0x7a, 0x9a, 0x77,
    0x92, 0x74, 0x8b, 0x74, 0x8b, 0x77, 0x84, 0x78, 0x7c, 0x08, 0xfc, 0x8e,
    0xfc, 0x34, 0x05, 0x86, 0x86, 0x88, 0x84, 0x8b, 0x83, 0x8b, 0x86, 0x8d,
    0x86, 0x8f, 0x87, 0x08, 0xbd, 0x4d, 0x05, 0x90, 0x84, 0x92, 0x88, 0x93,
    0x8b, 0x90, 0x8b, 0x90, 0x8d, 0x8f, 0x8f, 0x08, 0xf8, 0x6a, 0xf8, 0x18,
    0x05, 0x90, 0x8e, 0x91, 0x8c, 0x90, 0x8b, 0x90, 0x8b, 0x91, 0x8a, 0x90,
    0x88, 0x08, 0xf8, 0x6a, 0xfc, 0x18, 0x05, 0x8f, 0x87, 0x90, 0x89, 0x92,
    0x8b, 0x92, 0x8b, 0x91, 0x8e, 0x90, 0x92, 0x08, 0xbd, 0xc9, 0x05, 0x8f,
    0x8f, 0x8d, 0x90, 0x8b, 0x90, 0x8b, 0x93, 0x88, 0x92, 0x86, 0x90, 0x08,
    0x0e, 0xa7, 0xf8, 0x44, 0xfa, 0x14, 0x15, 0x7e, 0x8b, 0x7f, 0x86, 0x82,
    0x82, 0x82, 0x82, 0x86, 0x7f, 0x8b, 0x7e, 0x08, 0xfb, 0xe4, 0xfb, 0x44,
    0x07, 0x7a, 0x8b, 0x7f, 0x83, 0x84, 0x7a, 0x84, 0x7a, 0x8e, 0x7d, 0x97,
    0x7f, 0x08, 0xf7, 0xc4, 0xfb, 0xc4, 0x05, 0x93, 0x83, 0x94, 0x87, 0x96,
    0x8b, 0x96, 0x8b, 0x94, 0x8f, 0x93, 0x93, 0x08, 0xf7, 0xc4, 0xf7, 0xc4,
    0x05, 0x97, 0x97, 0x8e, 0x99, 0x84, 0x9c, 0x84, 0x9c, 0x7f, 0x93, 0x7a,
    0x8b, 0x08, 0xfb, 0x44, 0xf7, 0xe4, 0x06, 0x8b, 0x98, 0x86, 0x97, 0x82,
    0x94, 0x82, 0x94, 0x7f, 0x90, 0x7e, 0x8b, 0x08, 0xf8, 0x44, 0xfd, 0x84,
    0x15, 0x8b, 0x98, 0x86, 0x97, 0x82, 0x94, 0x82, 0x94, 0x7f, 0x90, 0x7e,
    0x8b, 0x08, 0xfb, 0xba, 0x06, 0x29, 0x29, 0x05, 0x77, 0x77, 0x73, 0x81,
    0x6f, 0x8b, 0x6f, 0x8b, 0x73, 0x95, 0x77, 0x9f, 0x08, 0x29, 0xed, 0x05,
    0xfb, 0xba, 0x06, 0x7e, 0x8b, 0x7f, 0x86, 0x82, 0x82, 0x82, 0x82, 0x86,
    0x7f, 0x8b, 0x7e, 0x08, 0xfb, 0x74, 0x07, 0x8b, 0x7e, 0x90, 0x7f, 0x94,
    0x82, 0x94, 0x82, 0x97, 0x86, 0x98, 0x8b, 0x08, 0xfa, 0x34, 0x06, 0x98,
    0x8b, 0x97, 0x90, 0x94, 0x94, 0x94, 0x94, 0x90, 0x97, 0x8b, 0x98, 0x08,
    0xfb, 0x8c, 0xbb, 0x15, 0x8b, 0x80, 0x87, 0x82, 0x83, 0x83, 0x83, 0x83,
    0x82, 0x87, 0x80, 0x8b, 0x80, 0x8b, 0x82, 0x8f, 0x83, 0x93, 0x83, 0x93,
    0x87, 0x94, 0x8b, 0x96, 0x8b, 0x96, 0x8f, 0x94, 0x93, 0x93, 0x93, 0x93,
    0x94, 0x8f, 0x96, 0x8b, 0x96, 0x8b, 0x94, 0x87, 0x93, 0x83, 0x93, 0x83,
    0x8f, 0x82, 0x8b, 0x80, 0x08, 0xf7, 0x14, 0x16, 0x8b, 0x80, 0x87, 0x82,
    0x83, 0x83, 0x83, 0x83, 0x82, 0x87, 0x80, 0x8b, 0x80, 0x8b, 0x82, 0x8f,
    0x83, 0x93, 0x83, 0x93, 0x87, 0x94, 0x8b, 0x96, 0x8b, 0x96, 0x8f, 0x94,
    0x93, 0x93, 0x93, 0x93, 0x94, 0x8f, 0x96, 0x8b, 0x96, 0x8b, 0x94, 0x87,
    0x93, 0x83, 0x93, 0x83, 0x8f, 0x82, 0x8b, 0x80, 0x08, 0x0e, 0xf7, 0x30,
    0x1c, 0x04, 0x70, 0xf8, 0x2c, 0x15, 0xfb, 0x68, 0xf7, 0xd2, 0x05, 0x83,
    0x96, 0x7f, 0x94, 0x7c, 0x94, 0x7c, 0x94, 0x7c, 0x8f, 0x7c, 0x8b, 0x08,
    0xfc, 0xac, 0x06, 0x82, 0x8b, 0x81, 0x89, 0x80, 0x87, 0x80, 0x87, 0x82,
    0x86, 0x82, 0x84, 0x82, 0x84, 0x84, 0x85, 0x86, 0x84, 0x08, 0xfb, 0x68,
    0xfb, 0xd2, 0x05, 0x80, 0x7b, 0x86, 0x79, 0x8b, 0x77, 0x08, 0xfb, 0x96,
    0x07, 0x8b, 0x70, 0x94, 0x75, 0x9e, 0x78, 0x9e, 0x78, 0xa1, 0x82, 0xa6,
    0x8b, 0x08, 0xfa, 0x54, 0x06, 0xa6, 0x8b, 0xa1, 0x94, 0x9e, 0x9e, 0x9e,
    0x9e, 0x94, 0xa1, 0x8b, 0xa6, 0x08, 0xf7, 0x96, 0x07, 0x8b, 0x9f, 0x86,
    0x9d, 0x80, 0x9b, 0x08, 0xfd, 0xc0, 0xf7, 0x7c, 0x15, 0xf8, 0x8c, 0x06,
    0xf7, 0x3e, 0xfb, 0x94, 0x05, 0xfb, 0x8a, 0x06, 0x4b, 0xfb, 0x14, 0x05,
    0xfb, 0x74, 0x06, 0x4b, 0xf7, 0x14, 0x05, 0xfb, 0x8a, 0x06, 0x0e, 0xa7,
    0xfa, 0x06, 0xf9, 0xfa, 0x15, 0x93, 0xfb, 0x38, 0x05, 0x70, 0xaa, 0x68,
    0xa8, 0x60, 0xa6, 0x60, 0xa6, 0x5d, 0xa1, 0x5a, 0x9a, 0x5a, 0x9a, 0x5e,
    0x93, 0x62, 0x8b, 0xfb, 0x0c, 0x8b, 0x21, 0x65, 0x30, 0x3e, 0x30, 0x3e,
    0x52, 0x2b, 0x74, 0xfb, 0x08, 0x8b, 0x8a, 0x8b, 0x89, 0x8b, 0x8a, 0x8b,
    0x84, 0x8d, 0x86, 0x90, 0x86, 0x90, 0x86, 0x90, 0x89, 0x92, 0x8b, 0x08,
    0xed, 0x06, 0x98, 0x8b, 0x93, 0x91, 0x8e, 0x97, 0x9c, 0xd6, 0xb5, 0xca,
    0xce, 0xc0, 0xce, 0xc0, 0xd3, 0xa5, 0xd8, 0x8b, 0xbf, 0x8b, 0xc1, 0x7c,
    0xc4, 0x6c, 0xc4, 0x6c, 0xb6, 0x67, 0xa8, 0x60, 0x08, 0xfb, 0x60, 0x95,
    0x05, 0x84, 0x8b, 0x86, 0x89, 0x86, 0x86, 0x86, 0x86, 0x89, 0x86, 0x8b,
    0x84, 0x08, 0x2d, 0x07, 0x8b, 0x84, 0x8d, 0x86, 0x90, 0x86, 0x90, 0x86,
    0x90, 0x89, 0x92, 0x8b, 0x08, 0xf8, 0x24, 0x06, 0x92, 0x8b, 0x90, 0x8d,
    0x90, 0x90, 0x90, 0x90, 0x8d, 0x90, 0x8b, 0x92, 0x08, 0xf8, 0x24, 0x07,
    0x8b, 0x9b, 0x83, 0x93, 0x7b, 0x8b, 0x08, 0x2d, 0x06, 0x84, 0x8b, 0x86,
    0x89, 0x86, 0x86, 0x86, 0x86, 0x89, 0x86, 0x8b, 0x84, 0x8b, 0x8b, 0x8b,
    0x8a, 0x8b, 0x8a, 0x08, 0xfc, 0x06, 0xfd, 0xda, 0x15, 0x57, 0x8b, 0x54,
    0x9a, 0x52, 0xaa, 0x52, 0xaa, 0x60, 0xaf, 0x6f, 0xb6, 0x08, 0xf7, 0x60,
    0x81, 0x05, 0x92, 0x8b, 0x90, 0x8d, 0x90, 0x90, 0x90, 0x90, 0x8d, 0x90,
    0x8b, 0x92, 0x08, 0xe9, 0x07, 0x8b, 0x92, 0x89, 0x90, 0x86, 0x90, 0x86,
    0x90, 0x86, 0x8d, 0x84, 0x8b, 0x08, 0xfc, 0x24, 0x06, 0x84, 0x8b, 0x86,
    0x89, 0x86, 0x86, 0x86, 0x86, 0x89, 0x86, 0x8b, 0x84, 0x08, 0xfc, 0x24,
    0x07, 0x8b, 0x7b, 0x93, 0x83, 0x9b, 0x8b, 0x08, 0xe9, 0x06, 0x92, 0x8b,
    0x90, 0x8d, 0x90, 0x90, 0x90, 0x90, 0x8d, 0x90, 0x8b, 0x92, 0x8b, 0x8b,
    0x8b, 0x8c, 0x8b, 0x8c, 0x08, 0x83, 0xf7, 0x38, 0x05, 0xb4, 0x5b, 0xc5,
    0x62, 0xd4, 0x69, 0xd4, 0x69, 0xd0, 0x7a, 0xcb, 0x8b, 0xf7, 0x0c, 0x8b,
    0xf5, 0xb1, 0xe6, 0xd8, 0xe6, 0xd8, 0xc4, 0xeb, 0xa0, 0xf7, 0x08, 0x8c,
    0x8c, 0x8c, 0x8d, 0x8b, 0x8c, 0x8b, 0x92, 0x89, 0x90, 0x86, 0x90, 0x86,
    0x90, 0x86, 0x8d, 0x84, 0x8b, 0x08, 0x29, 0x06, 0x7e, 0x8b, 0x83, 0x85,
    0x88, 0x7f, 0x78, 0x40, 0x61, 0x4c, 0x48, 0x56, 0x48, 0x56, 0x44, 0x71,
    0x3f, 0x8b, 0x08, 0x0e, 0xfc, 0x78, 0xf8, 0x42, 0xf9, 0x86, 0x15, 0xfb,
    0x46, 0xfb, 0x46, 0x05, 0xfb, 0x60, 0x06, 0x7e, 0x8b, 0x7f, 0x86, 0x82,
    0x82, 0x82, 0x82, 0x86, 0x7f, 0x8b, 0x7e, 0x08, 0xfb, 0xb4, 0x07, 0x8b,
    0x7e, 0x90, 0x7f, 0x94, 0x82, 0x94, 0x82, 0x97, 0x86, 0x98, 0x8b, 0x08,
    0xf7, 0x60, 0x06, 0xf7, 0x46, 0xfb, 0x46, 0x05, 0x9a, 0x7c, 0x9c, 0x88,
    0x9f, 0x93, 0x9f, 0x93, 0x95, 0x9a, 0x8b, 0xa0, 0x08, 0xf9, 0x34, 0x07,
    0x8b, 0xa0, 0x81, 0x9a, 0x77, 0x93, 0x77, 0x93, 0x7a, 0x88, 0x7c, 0x7c,
    0x08, 0x0e, 0xfb, 0x78, 0xf8, 0x42, 0xf9, 0x84, 0x15, 0xfb, 0x46, 0xfb,
    0x46, 0x05, 0xfb, 0x60, 0x06, 0x7e, 0x8b, 0x7f, 0x86, 0x82, 0x82, 0x82,
    0x82, 0x86, 0x7f, 0x8b, 0x7e, 0x08, 0xfb, 0xb4, 0x07, 0x8b, 0x7e, 0x90,
    0x7f, 0x94, 0x82, 0x94, 0x82, 0x97, 0x86, 0x98, 0x8b, 0x08, 0xf7, 0x60,
    0x06, 0xf7, 0x46, 0xfb, 0x46, 0x05, 0x9a, 0x7c, 0x9c, 0x88, 0x9f, 0x93,
    0x9f, 0x93, 0x95, 0x9a, 0x8b, 0xa0, 0x08, 0xf9, 0x34, 0x07, 0x8b, 0xa0,
    0x81, 0x9a, 0x77, 0x93, 0x77, 0x93, 0x7a, 0x88, 0x7c, 0x7c, 0x08, 0xf7,
    0x8a, 0xfb, 0x6c, 0x15, 0x80, 0x92, 0x7f, 0x8c, 0x7e, 0x87, 0x7e, 0x87,
    0x81, 0x83, 0x85, 0x80, 0x85, 0x80, 0x8a, 0x7f, 0x8e, 0x7e, 0x8e, 0x7e,
    0x93, 0x82, 0x97, 0x84, 0xa7, 0x7b, 0x99, 0x74, 0x8b, 0x6c, 0x8b, 0x6c,
    0x7d, 0x74, 0x6f, 0x7b, 0x7f, 0x84, 0x83, 0x82, 0x88, 0x7e, 0x88, 0x7e,
    0x8c, 0x7f, 0x91, 0x80, 0x08, 0x91, 0x80, 0x95, 0x83, 0x98, 0x87, 0x98,
    0x87, 0x97, 0x8c, 0x96, 0x92, 0xa7, 0x9b, 0xa1, 0xa1, 0x9c, 0xa6, 0x9c,
    0xa6, 0x93, 0xa9, 0x8b, 0xab, 0x8b, 0xab, 0x83, 0xa9, 0x7a, 0xa6, 0x7a,
    0xa6, 0x75, 0xa1, 0x6f, 0x9b, 0x08, 0x0e, 0xf7, 0x30, 0xf8, 0x42, 0xf9,
    0x86, 0x15, 0xfb, 0x46, 0xfb, 0x46, 0x05, 0xfb, 0x60, 0x06, 0x7e, 0x8b,
    0x7f, 0x86, 0x82, 0x82, 0x82, 0x82, 0x86, 0x7f, 0x8b, 0x7e, 0x08, 0xfb,
    0xb4, 0x07, 0x8b, 0x7e, 0x90, 0x7f, 0x94, 0x82, 0x94, 0x82, 0x97, 0x86,
    0x98, 0x8b, 0x08, 0xf7, 0x60, 0x06, 0xf7, 0x46, 0xfb, 0x46, 0x05, 0x9a,
    0x7c, 0x9c, 0x88, 0x9f, 0x93, 0x9f, 0x93, 0x95, 0x9a, 0x8b, 0xa0, 0x08,
    0xf9, 0x34, 0x07, 0x8b, 0xa0, 0x81, 0x9a, 0x77, 0x93, 0x77, 0x93, 0x7a,
    0x88, 0x7c, 0x7c, 0x08, 0xf8, 0x66, 0xf1, 0x15, 0x80, 0x93, 0x7f, 0x8d,
    0x7e, 0x88, 0x7e, 0x88, 0x80, 0x84, 0x84, 0x80, 0x84, 0x80, 0x88, 0x7f,
    0x8e, 0x7e, 0x8e, 0x7e, 0x92, 0x81, 0x97, 0x84, 0xcc, 0x5f, 0xbf, 0x52,
    0xb1, 0x46, 0xb1, 0x46, 0x9e, 0x41, 0x8b, 0x3c, 0x8b, 0x57, 0x82, 0x58,
    0x7a, 0x5a, 0x7a, 0x5a, 0x72, 0x5e, 0x6c, 0x62, 0x08, 0x6c, 0x62, 0x65,
    0x68, 0x5f, 0x6e, 0x7f, 0x84, 0x84, 0x81, 0x88, 0x7e, 0x88, 0x7e, 0x8e,
    0x7f, 0x92, 0x80, 0x92, 0x80, 0x96, 0x84, 0x98, 0x88, 0x98, 0x88, 0x97,
    0x8d, 0x96, 0x93, 0xdb, 0xbf, 0xca, 0xcf, 0xb8, 0xdf, 0xb8, 0xdf, 0xa2,
    0xe4, 0x8b, 0xea, 0x8b, 0xea, 0x74, 0xe4, 0x5e, 0xdf, 0x08, 0x5e, 0xdf,
    0x4c, 0xcf, 0x3b, 0xbf, 0x08, 0xcb, 0xfc, 0x6c, 0x15, 0x8b, 0xcb, 0x7c,
    0xc7, 0x6d, 0xc2, 0x6d, 0xc2, 0x61, 0xb8, 0x54, 0xac, 0x80, 0x93, 0x7f,
    0x8d, 0x7e, 0x88, 0x7e, 0x88, 0x81, 0x83, 0x84, 0x80, 0x84, 0x80, 0x89,
    0x7f, 0x8e, 0x7e, 0x8e, 0x7e, 0x92, 0x81, 0x97, 0x83, 0xa4, 0x7b, 0xa2,
    0x77, 0x9e, 0x73, 0x9e, 0x73, 0x9a, 0x70, 0x95, 0x6e, 0x08, 0x95, 0x6e,
    0x90, 0x6d, 0x8b, 0x6c, 0x8b, 0x6c, 0x86, 0x6d, 0x81, 0x6e, 0x81, 0x6e,
    0x7c, 0x70, 0x78, 0x73, 0x78, 0x73, 0x74, 0x77, 0x72, 0x7b, 0x7f, 0x83,
    0x84, 0x81, 0x88, 0x7e, 0x88, 0x7e, 0x8d, 0x7f, 0x92, 0x7f, 0x92, 0x80,
    0x94, 0x84, 0x98, 0x88, 0x98, 0x88, 0x97, 0x8d, 0x97, 0x93, 0x08, 0xc2,
    0xac, 0xb5, 0xb8, 0xa9, 0xc2, 0xa9, 0xc2, 0x9a, 0xc7, 0x8b, 0xcb, 0x08,
    0xfb, 0xb0, 0xf7, 0x2e, 0x15, 0x80, 0x92, 0x7f, 0x8c, 0x7e, 0x87, 0x7e,
    0x87, 0x81, 0x83, 0x85, 0x80, 0x85, 0x80, 0x8a, 0x7f, 0x8e, 0x7e, 0x8e,
    0x7e, 0x93, 0x82, 0x97, 0x84, 0xa7, 0x7b, 0x99, 0x74, 0x8b, 0x6c, 0x8b,
    0x6c, 0x7d, 0x74, 0x6f, 0x7b, 0x7f, 0x84, 0x83, 0x82, 0x88, 0x7e, 0x88,
    0x7e, 0x8c, 0x7f, 0x91, 0x80, 0x08, 0x91, 0x80, 0x95, 0x83, 0x98, 0x87,
    0x98, 0x87, 0x97, 0x8c, 0x96, 0x92, 0xa7, 0x9b, 0xa1, 0xa1, 0x9c, 0xa6,
    0x9c, 0xa6, 0x93, 0xa9, 0x8b, 0xab, 0x8b, 0xab, 0x83, 0xa9, 0x7a, 0xa6,
    0x7a, 0xa6, 0x75, 0xa1, 0x6f, 0x9b, 0x08, 0x0e, 0xa7, 0xfa, 0x34, 0x16,
    0xa6, 0x8b, 0xa1, 0x94, 0x9e, 0x9e, 0x9e, 0x9e, 0x94, 0xa1, 0x8b, 0xa6,
    0x08, 0xf8, 0xd4, 0x07, 0x8b, 0xa6, 0x82, 0xa1, 0x78, 0x9e, 0x78, 0x9e,
    0x75, 0x94, 0x70, 0x8b, 0x08, 0xfd, 0xd4, 0x06, 0x70, 0x8b, 0x75, 0x82,
    0x78, 0x78, 0x78, 0x78, 0x82, 0x75, 0x8b, 0x70, 0x08, 0xfc, 0xd4, 0x07,
    0x8b, 0x70, 0x94, 0x75, 0x9e, 0x78, 0x9e, 0x78, 0xa1, 0x82, 0xa6, 0x8b,
    0x08, 0xf7, 0x14, 0xf9, 0x24, 0x15, 0xaa, 0x8b, 0xa5, 0x80, 0xa1, 0x75,
    0xa1, 0x75, 0x96, 0x71, 0x8b, 0x6c, 0x8b, 0x6c, 0x80, 0x71, 0x75, 0x75,
    0x75, 0x75, 0x71, 0x80, 0x6c, 0x8b, 0x6c, 0x8b, 0x71, 0x96, 0x75, 0xa1,
    0x75, 0xa1, 0x80, 0xa5, 0x8b, 0xaa, 0x8b, 0xaa, 0x96, 0xa5, 0xa1, 0xa1,
    0xa1, 0xa1, 0xa5, 0x96, 0xaa, 0x8b, 0x08, 0x2b, 0xfc, 0xa4, 0x15, 0xeb,
    0x07, 0xf7, 0x24, 0xf7, 0x24, 0x05, 0x96, 0x96, 0x95, 0x8b, 0x96, 0x80,
    0x08, 0xf7, 0x04, 0xfb, 0x04, 0xf7, 0xa4, 0xf7, 0xa4, 0x05, 0x96, 0x96,
    0x95, 0x8b, 0x96, 0x80, 0x08, 0xf7, 0x44, 0xfb, 0x44, 0x05, 0xfb, 0x74,
    0x07, 0x0e, 0x27, 0xf7, 0x14, 0x63, 0x15, 0x8b, 0x7b, 0x93, 0x83, 0x9b,
    0x8b, 0x08, 0xeb, 0x06, 0x9b, 0x8b, 0x93, 0x93, 0x8b, 0x9b, 0x08, 0xf7,
    0xf2, 0x07, 0xf8, 0x1c, 0xfb, 0xfc, 0x05, 0x9f, 0x7a, 0xa1, 0x88, 0xa4,
    0x97, 0xa4, 0x97, 0x97, 0x9e, 0x8b, 0xa6, 0x08, 0xf9, 0x94, 0x07, 0x8b,
    0xa6, 0x7f, 0x9e, 0x72, 0x97, 0x72, 0x97, 0x75, 0x88, 0x77, 0x7a, 0x08,
    0xfc, 0x1c, 0xfb, 0xfe, 0x05, 0xf7, 0xf4, 0x07, 0x8b, 0x9b, 0x83, 0x93,
    0x7b, 0x8b, 0x08, 0x2b, 0x06, 0x7b, 0x8b, 0x83, 0x83, 0x8b, 0x7b, 0x08,
    0x0e, 0x27, 0xf9, 0xe4, 0xf8, 0x66, 0x15, 0xfd, 0x54, 0xf8, 0x34, 0x05,
    0x6f, 0x9e, 0x6c, 0x8c, 0x69, 0x7a, 0x69, 0x7a, 0x7a, 0x6f, 0x8b, 0x63,
    0x08, 0xfd, 0xd4, 0x07, 0x8b, 0x66, 0x9b, 0x6f, 0xac, 0x79, 0xac, 0x79,
    0xaa, 0x8b, 0xaa, 0x9e, 0x08, 0xf9, 0x54, 0xf8, 0x34, 0x05, 0xab, 0x9e,
    0x9b, 0xa6, 0x8b, 0xaf, 0x8b, 0xaf, 0x7b, 0xa6, 0x6b, 0x9e, 0x08, 0x0e,
    0x27, 0xf7, 0xb4, 0x4d, 0x15, 0xa6, 0x8b, 0xa1, 0x94, 0x9e, 0x9e, 0x9e,
    0x9e, 0x94, 0xa1, 0x8b, 0xa6, 0x08, 0xf9, 0x54, 0x07, 0x8b, 0xa6, 0x82,
    0xa1, 0x78, 0x9e, 0x78, 0x9e, 0x75, 0x94, 0x70, 0x8b, 0x08, 0xfb, 0x54,
    0x06, 0x70, 0x8b, 0x75, 0x82, 0x78, 0x78, 0x78, 0x78, 0x82, 0x75, 0x8b,
    0x70, 0x08, 0xfd, 0x54, 0x07, 0x8b, 0x70, 0x94, 0x75, 0x9e, 0x78, 0x9e,
    0x78, 0xa1, 0x82, 0xa6, 0x8b, 0x08, 0xf9, 0xb4, 0xeb, 0x15, 0xf9, 0x54,
    0x07, 0x8b, 0xa6, 0x82, 0xa1, 0x78, 0x9e, 0x78, 0x9e, 0x75, 0x94, 0x70,
    0x8b, 0x08, 0xfb, 0x54, 0x06, 0x70, 0x8b, 0x75, 0x82, 0x78, 0x78, 0x78,
    0x78, 0x82, 0x75, 0x8b, 0x70, 0x08, 0xfd, 0x54, 0x07, 0x8b, 0x70, 0x94,
    0x75, 0x9e, 0x78, 0x9e, 0x78, 0xa1, 0x82, 0xa6, 0x8b, 0x08, 0xf7, 0x54,
    0x06, 0xa6, 0x8b, 0xa1, 0x94, 0x9e, 0x9e, 0x9e, 0x9e, 0x94, 0xa1, 0x8b,
    0xa6, 0x08, 0x0e, 0x27, 0xf9, 0xb4, 0xf9, 0xd4, 0x15, 0xfd, 0x54, 0x06,
    0x70, 0x8b, 0x75, 0x82, 0x78, 0x78, 0x78, 0x78, 0x82, 0x75, 0x8b, 0x70,
    0x08, 0xfd, 0x54, 0x07, 0x8b, 0x70, 0x94, 0x75, 0x9e, 0x78, 0x9e, 0x78,
    0xa1, 0x82, 0xa6, 0x8b, 0x08, 0xf9, 0x54, 0x06, 0xa6, 0x8b, 0xa1, 0x94,
    0x9e, 0x9e, 0x9e, 0x9e, 0x94, 0xa1, 0x8b, 0xa6, 0x08, 0xf9, 0x54, 0x07,
    0x8b, 0xa6, 0x82, 0xa1, 0x78, 0x9e, 0x78, 0x9e, 0x75, 0x94, 0x70, 0x8b,
    0x08, 0x0e, 0x27, 0xf9, 0x94, 0xf9, 0xbc, 0x15, 0x8b, 0x9b, 0x83, 0x93,
    0x7b, 0x8b, 0x08, 0x2b, 0x06, 0x7b, 0x8b, 0x83, 0x83, 0x8b, 0x7b, 0x08,
    0xfb, 0xf2, 0x07, 0xfc, 0x1c, 0xf7, 0xfc, 0x05, 0x77, 0x9c, 0x75, 0x8e,
    0x72, 0x7f, 0x72, 0x7f, 0x7f, 0x78, 0x8b, 0x70, 0x08, 0xfd, 0x94, 0x07,
    0x8b, 0x70, 0x97, 0x78, 0xa4, 0x7f, 0xa4, 0x7f, 0xa1, 0x8e, 0x9f, 0x9c,
    0x08, 0xf8, 0x1c, 0xf7, 0xfe, 0x05, 0xfb, 0xf4, 0x07, 0x8b, 0x7b, 0x93,
    0x83, 0x9b, 0x8b, 0x08, 0xeb, 0x06, 0x9b, 0x8b, 0x93, 0x93, 0x8b, 0x9b,
    0x08, 0x0e, 0x27, 0xfa, 0x14, 0xf7, 0x14, 0x15, 0x8b, 0x9c, 0x85, 0x9a,
    0x7e, 0x98, 0x7e, 0x98, 0x7c, 0x91, 0x7a, 0x8b, 0x08, 0xfd, 0x94, 0x06,
    0x7a, 0x8b, 0x7c, 0x85, 0x7e, 0x7e, 0x7e, 0x7e, 0x85, 0x7c, 0x8b, 0x7a,
    0x08, 0xfb, 0x14, 0x07, 0x8b, 0x7a, 0x91, 0x7c, 0x98, 0x7e, 0x98, 0x7e,
    0x9a, 0x85, 0x9c, 0x8b, 0x08, 0xf9, 0x94, 0x06, 0x9c, 0x8b, 0x9a, 0x91,
    0x98, 0x98, 0x98, 0x98, 0x91, 0x9a, 0x8b, 0x9c, 0x08, 0xfd, 0xb4, 0xf7,
    0x94, 0x15, 0xf9, 0x54, 0x06, 0xb4, 0x8b, 0xa8, 0x9e, 0x9c, 0xb1, 0x9c,
    0xb1, 0x85, 0xad, 0x6f, 0xaa, 0x08, 0xfb, 0xf4, 0xf8, 0x14, 0x05, 0x78,
    0xa0, 0x74, 0x96, 0x6f, 0x8b, 0x6f, 0x8b, 0x74, 0x80, 0x78, 0x76, 0x08,
    0xfb, 0xf4, 0xfc, 0x14, 0x05, 0x6f, 0x6c, 0x85, 0x69, 0x9c, 0x65, 0x9c,
    0x65, 0xa8, 0x78, 0xb4, 0x8b, 0x08, 0x0e, 0xfb, 0xf8, 0xd1, 0xf8, 0x36,
    0x15, 0x80, 0x82, 0x86, 0x7f, 0x8b, 0x7e, 0x8b, 0x7e, 0x90, 0x7f, 0x96,
    0x82, 0x08, 0xf8, 0x18, 0xfc, 0x18, 0x05, 0x94, 0x82, 0x97, 0x86, 0x98,
    0x8b, 0x98, 0x8b, 0x97, 0x90, 0x94, 0x94, 0x08, 0xb7, 0xb7, 0x05, 0x94,
    0x94, 0x90, 0x97, 0x8c, 0x98, 0x8c, 0x98, 0x86, 0x97, 0x82, 0x94, 0x08,
    0xfb, 0xca, 0xf7, 0xca, 0xf7, 0xca, 0xf7, 0xca, 0x05, 0x94, 0x94, 0x90,
    0x97, 0x8a, 0x98, 0x8a, 0x98, 0x86, 0x97, 0x82, 0x94, 0x08, 0x5f, 0xb7,
    0x05, 0x82, 0x94, 0x7f, 0x90, 0x7e, 0x8b, 0x7e, 0x8b, 0x7f, 0x86, 0x82,
    0x82, 0x08, 0x0e, 0xfb, 0xf8, 0xf8, 0xce, 0xf7, 0xf2, 0x15, 0x96, 0x94,
    0x90, 0x97, 0x8b, 0x98, 0x8b, 0x98, 0x86, 0x97, 0x80, 0x94, 0x08, 0xfc,
    0x18, 0xf8, 0x18, 0x05, 0x82, 0x94, 0x7f, 0x90, 0x7e, 0x8b, 0x7e, 0x8b,
    0x7f, 0x86, 0x82, 0x82, 0x08, 0x5f, 0x5f, 0x05, 0x82, 0x82, 0x86, 0x7f,
    0x8a, 0x7e, 0x8a, 0x7e, 0x90, 0x7f, 0x94, 0x82, 0x08, 0xf7, 0xca, 0xfb,
    0xca, 0xfb, 0xca, 0xfb, 0xca, 0x05, 0x82, 0x82, 0x86, 0x7f, 0x8c, 0x7e,
    0x8c, 0x7e, 0x90, 0x7f, 0x94, 0x82, 0x08, 0xb7, 0x5f, 0x05, 0x94, 0x82,
    0x97, 0x86, 0x98, 0x8b, 0x98, 0x8b, 0x97, 0x90, 0x94, 0x94, 0x08, 0x0e,
    0x27, 0xf9, 0xd4, 0xf8, 0x74, 0x15, 0xfb, 0xb4, 0xf7, 0xb4, 0x06, 0x8b,
    0x9c, 0x85, 0x9a, 0x7e, 0x98, 0x7e, 0x98, 0x7c, 0x91, 0x7a, 0x8b, 0x08,
    0x4b, 0x06, 0x7a, 0x8b, 0x7c, 0x85, 0x7e, 0x7e, 0x7e, 0x7e, 0x85, 0x7c,
    0x8b, 0x7a, 0x08, 0xfb, 0xb4, 0xfb, 0xb4, 0x07, 0x7a, 0x8b, 0x7c, 0x85,
    0x7e, 0x7e, 0x7e, 0x7e, 0x85, 0x7c, 0x8b, 0x7a, 0x08, 0x4b, 0x07, 0x8b,
    0x7a, 0x91, 0x7c, 0x98, 0x7e, 0x98, 0x7e, 0x9a, 0x85, 0x9c, 0x8b, 0x08,
    0xf7, 0xb4, 0xfb, 0xb4, 0x06, 0x8b, 0x7a, 0x91, 0x7c, 0x98, 0x7e, 0x98,
    0x7e, 0x9a, 0x85, 0x9c, 0x8b, 0x08, 0xcb, 0x06, 0x9c, 0x8b, 0x9a, 0x91,
    0x98, 0x98, 0x98, 0x98, 0x91, 0x9a, 0x8b, 0x9c, 0x08, 0xf7, 0xb4, 0xf7,
    0xb4, 0x07, 0x9c, 0x8b, 0x9a, 0x91, 0x98, 0x98, 0x98, 0x98, 0x91, 0x9a,
    0x8b, 0x9c, 0x08, 0xcb, 0x07, 0x8b, 0x9c, 0x85, 0x9a, 0x7e, 0x98, 0x7e,
    0x98, 0x7c, 0x91, 0x7a, 0x8b, 0x08, 0x0e, 0x27, 0xf9, 0xd4, 0xf8, 0x74,
    0x15, 0xfd, 0x94, 0x06, 0x7a, 0x8b, 0x7c, 0x85, 0x7e, 0x7e, 0x7e, 0x7e,
    0x85, 0x7c, 0x8b, 0x7a, 0x08, 0x4b, 0x07, 0x8b, 0x7a, 0x91, 0x7c, 0x98,
    0x7e, 0x98, 0x7e, 0x9a, 0x85, 0x9c, 0x8b, 0x08, 0xf9, 0x94, 0x06, 0x9c,
    0x8b, 0x9a, 0x91, 0x98, 0x98, 0x98, 0x98, 0x91, 0x9a, 0x8b, 0x9c, 0x08,
    0xcb, 0x07, 0x8b, 0x9c, 0x85, 0x9a, 0x7e, 0x98, 0x7e, 0x98, 0x7c, 0x91,
    0x7a, 0x8b, 0x08, 0x0e, 0xf7, 0x30, 0x1c, 0x04, 0x7a, 0xf8, 0x32, 0x15,
    0x53, 0xf6, 0x3c, 0xe0, 0x26, 0xcc, 0x26, 0xcc, 0xfb, 0x04, 0xab, 0xfb,
    0x0d, 0x8b, 0xfb, 0x0d, 0x8b, 0xfb, 0x04, 0x6b, 0x26, 0x4a, 0x26, 0x4a,
    0x3c, 0x36, 0x53, 0x20, 0x87, 0x82, 0x89, 0x81, 0x8b, 0x80, 0x8b, 0x80,
    0x8d, 0x81, 0x8f, 0x82, 0xb0, 0x44, 0xbb, 0x4e, 0xc4, 0x56, 0xc4, 0x56,
    0xcd, 0x62, 0xd5, 0x6d, 0x08, 0xd5, 0x6d, 0xd8, 0x7c, 0xdb, 0x8b, 0xf7,
    0x0d, 0x8b, 0xf7, 0x04, 0xab, 0xf0, 0xcc, 0xf0, 0xcc, 0xda, 0xe0, 0xc3,
    0xf6, 0x8f, 0x94, 0x8d, 0x95, 0x8b, 0x96, 0x8b, 0x96, 0x89, 0x95, 0x87,
    0x94, 0x08, 0xfc, 0xce, 0xfb, 0xd2, 0x15, 0x3b, 0x8b, 0x47, 0xa7, 0x53,
    0xc3, 0x53, 0xc3, 0x6f, 0xcf, 0x8b, 0xdb, 0x8b, 0xdb, 0xa7, 0xcf, 0xc3,
    0xc3, 0xc3, 0xc3, 0xcf, 0xa7, 0xdb, 0x8b, 0xdb, 0x8b, 0xcf, 0x6f, 0xc3,
    0x53, 0xc3, 0x53, 0xa7, 0x47, 0x8b, 0x3b, 0x8b, 0x3b, 0x6f, 0x47, 0x53,
    0x53, 0x53, 0x53, 0x47, 0x6f, 0x3b, 0x8b, 0x08, 0xf8, 0x74, 0x04, 0x7a,
    0x8b, 0x7a, 0x88, 0x7b, 0x86, 0x97, 0x7b, 0x91, 0x78, 0x8b, 0x76, 0x8b,
    0x70, 0x82, 0x75, 0x78, 0x78, 0x78, 0x78, 0x75, 0x82, 0x70, 0x8b, 0x76,
    0x8b, 0x78, 0x91, 0x7b, 0x97, 0x86, 0x7b, 0x88, 0x7a, 0x8b, 0x7a, 0x8b,
    0x57, 0x9e, 0x5e, 0xb1, 0x65, 0xb1, 0x65, 0xb8, 0x78, 0xc0, 0x8b, 0x08,
    0xc0, 0x8b, 0xb8, 0x9e, 0xb0, 0xb1, 0xb0, 0xb1, 0x9e, 0xb8, 0x8b, 0xc0,
    0x8b, 0xc0, 0x78, 0xb8, 0x66, 0xb0, 0x66, 0xb0, 0x5d, 0x9e, 0x56, 0x8b,
    0x08, 0x0e, 0xf7, 0xb0, 0xf9, 0x14, 0xeb, 0x15, 0x5a, 0x8b, 0x5d, 0x97,
    0x60, 0xa2, 0x60, 0xa2, 0x69, 0xab, 0x71, 0xb4, 0x71, 0xb4, 0x7c, 0xb8,
    0x87, 0xbc, 0x08, 0xfb, 0x66, 0xf7, 0x36, 0x05, 0x6c, 0x64, 0x73, 0x67,
    0x78, 0x68, 0x87, 0x82, 0x89, 0x81, 0x8b, 0x80, 0x8b, 0x80, 0x8d, 0x81,
    0x8f, 0x82, 0xc3, 0x20, 0xda, 0x36, 0xf0, 0x4a, 0xf0, 0x4a, 0xf7, 0x04,
    0x6b, 0xf7, 0x0d, 0x8b, 0xbc, 0x8b, 0xbf, 0x92, 0xc2, 0x98, 0x08, 0x23,
    0xdd, 0x05, 0x7a, 0x87, 0x79, 0x89, 0x7a, 0x8b, 0x08, 0xf9, 0x08, 0xfb,
    0x08, 0x15, 0xfb, 0x72, 0xf7, 0x3e, 0x05, 0xa7, 0xa3, 0xa9, 0xab, 0xab,
    0xb3, 0xab, 0xb3, 0xa4, 0xaf, 0x9c, 0xab, 0x8f, 0x94, 0x8d, 0x95, 0x8b,
    0x96, 0x8b, 0x96, 0x89, 0x95, 0x87, 0x94, 0x53, 0xf6, 0x3c, 0xe0, 0x26,
    0xcc, 0x26, 0xcc, 0xfb, 0x04, 0xab, 0xfb, 0x0d, 0x8b, 0x6f, 0x8b, 0x6b,
    0x88, 0x66, 0x84, 0x66, 0x84, 0x67, 0x82, 0x68, 0x80, 0x08, 0x68, 0x80,
    0x6d, 0x7e, 0x73, 0x7c, 0x08, 0xfb, 0x94, 0xf7, 0x5a, 0x05, 0x86, 0x8f,
    0x85, 0x8d, 0x84, 0x8b, 0x80, 0x8b, 0x83, 0x87, 0x84, 0x83, 0x08, 0x63,
    0x59, 0x05, 0x87, 0x84, 0x89, 0x85, 0x8b, 0x84, 0x8b, 0x80, 0x8f, 0x83,
    0x93, 0x84, 0x08, 0x1c, 0x04, 0x9a, 0xfe, 0x22, 0x05, 0x90, 0x87, 0x91,
    0x89, 0x92, 0x8b, 0x96, 0x8b, 0x93, 0x8f, 0x92, 0x93, 0x08, 0xb3, 0xbd,
    0x05, 0x8f, 0x92, 0x8d, 0x91, 0x8b, 0x92, 0x8b, 0x96, 0x87, 0x93, 0x83,
    0x92, 0x08, 0xfc, 0x04, 0xf7, 0xb0, 0x15, 0x3d, 0xc7, 0x05, 0x92, 0x9f,
    0x8e, 0x9f, 0x8b, 0x9f, 0x8b, 0x8c, 0x8b, 0x8c, 0x8b, 0x8b, 0x8b, 0xbf,
    0x78, 0xb8, 0x66, 0xb0, 0x66, 0xb0, 0x5e, 0x9e, 0x57, 0x8b, 0x7a, 0x8b,
    0x79, 0x88, 0x7a, 0x86, 0x97, 0x7b, 0x91, 0x78, 0x8b, 0x76, 0x8b, 0x84,
    0x8a, 0x85, 0x88, 0x84, 0x08, 0xfb, 0x26, 0xf7, 0x06, 0x05, 0xa0, 0x9e,
    0xa8, 0x9a, 0xaf, 0x98, 0xaf, 0x98, 0xab, 0x91, 0xa7, 0x8b, 0xdb, 0x8b,
    0xcf, 0x6f, 0xc3, 0x53, 0xc3, 0x53, 0xa7, 0x47, 0x8b, 0x3b, 0x8b, 0x62,
    0x82, 0x63, 0x78, 0x64, 0x08, 0x0e, 0xf7, 0x30, 0x1c, 0x04, 0x74, 0x9b,
    0x15, 0xfc, 0x74, 0xf9, 0xd4, 0x05, 0x78, 0xab, 0x6f, 0x9b, 0x66, 0x8b,
    0x66, 0x8b, 0x6f, 0x7b, 0x78, 0x6b, 0x08, 0xfc, 0x74, 0xfd, 0xd4, 0x05,
    0x7a, 0x6b, 0x8b, 0x6b, 0x9d, 0x6b, 0x9d, 0x6b, 0xa7, 0x7b, 0xb0, 0x8b,
    0x08, 0xfa, 0x54, 0x06, 0xb0, 0x8b, 0xa7, 0x9b, 0x9d, 0xab, 0x9d, 0xab,
    0x8b, 0xab, 0x7a, 0xab, 0x08, 0xfc, 0xc8, 0xf7, 0x40, 0x15, 0xa4, 0x8b,
    0xa1, 0x82, 0x9d, 0x79, 0x9d, 0x79, 0x94, 0x75, 0x8b, 0x72, 0x8b, 0x72,
    0x82, 0x75, 0x79, 0x79, 0x79, 0x79, 0x75, 0x82, 0x72, 0x8b, 0x72, 0x8b,
    0x75, 0x94, 0x79, 0x9d, 0x79, 0x9d, 0x82, 0xa1, 0x8b, 0xa4, 0x8b, 0xa4,
    0x94, 0xa1, 0x9d, 0x9d, 0x9d, 0x9d, 0xa1, 0x94, 0xa4, 0x8b, 0x08, 0x33,
    0xf7, 0xde, 0x15, 0x8b, 0x93, 0x8d, 0x91, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x8d, 0x92, 0x8b, 0x08, 0xf7, 0x14, 0x06, 0x92, 0x8b, 0x90, 0x89, 0x90,
    0x86, 0x90, 0x86, 0x8d, 0x85, 0x8b, 0x83, 0x08, 0x7b, 0xfb, 0xa4, 0x05,
    0x8b, 0x7c, 0x83, 0x84, 0x7b, 0x8b, 0x08, 0x2b, 0x06, 0x7b, 0x8b, 0x83,
    0x92, 0x8b, 0x9a, 0x08, 0x0e, 0xa7, 0xfa, 0x86, 0xf7, 0x46, 0x15, 0xfb,
    0x34, 0xf7, 0x34, 0x05, 0x7c, 0x9a, 0x7a, 0x8e, 0x77, 0x83, 0x77, 0x83,
    0x81, 0x7c, 0x8b, 0x76, 0x08, 0x3b, 0x4b, 0x07, 0x21, 0xf7, 0x06, 0x21,
    0xfb, 0x08, 0xf7, 0x20, 0xfb, 0x2a, 0x05, 0x90, 0x86, 0x91, 0x88, 0x92,
    0x8b, 0x08, 0xf7, 0x0a, 0x3b, 0x06, 0x8b, 0x76, 0x95, 0x7c, 0x9f, 0x83,
    0x9f, 0x83, 0x9c, 0x8e, 0x9a, 0x9a, 0x08, 0xf7, 0x34, 0xf7, 0x34, 0x05,
    0x94, 0x94, 0x90, 0x97, 0x8b, 0x98, 0x8b, 0x98, 0x86, 0x97, 0x82, 0x94,
    0x08, 0xfe, 0x6e, 0xf8, 0x02, 0x15, 0xf7, 0x3c, 0x06, 0xf5, 0xfb, 0x06,
    0xf5, 0xf7, 0x08, 0xfb, 0x20, 0xf7, 0x2a, 0x05, 0x86, 0x90, 0x85, 0x8e,
    0x84, 0x8b, 0x08, 0xfb, 0x72, 0x06, 0x7b, 0x8b, 0x83, 0x83, 0x8b, 0x7b,
    0x08, 0xfb, 0x04, 0x07, 0x8b, 0x7b, 0x93, 0x83, 0x9b, 0x8b, 0x08, 0xf9,
    0x7c, 0x16, 0x3b, 0x07, 0x8b, 0x76, 0x95, 0x7c, 0x9f, 0x83, 0x9f, 0x83,
    0x9c, 0x8e, 0x9a, 0x9a, 0x08, 0xf7, 0x34, 0xf7, 0x34, 0x05, 0x94, 0x94,
    0x90, 0x97, 0x8b, 0x98, 0x8b, 0x98, 0x86, 0x97, 0x82, 0x94, 0x08, 0xfb,
    0x34, 0xf7, 0x34, 0x05, 0x7c, 0x9a, 0x7a, 0x8e, 0x77, 0x83, 0x77, 0x83,
    0x81, 0x7c, 0x8b, 0x76, 0x08, 0x3b, 0xfb, 0x0a, 0x07, 0x84, 0x8b, 0x85,
    0x88, 0x86, 0x86, 0x08, 0xfc, 0x4c, 0xfc, 0x6c, 0x05, 0xfb, 0x3c, 0x06,
    0x7b, 0x8b, 0x83, 0x83, 0x8b, 0x7b, 0x08, 0xfb, 0x04, 0x07, 0x8b, 0x7b,
    0x93, 0x83, 0x9b, 0x8b, 0x08, 0xf7, 0x72, 0x06, 0x92, 0x8b, 0x91, 0x8e,
    0x90, 0x90, 0x08, 0xf8, 0x4c, 0xf8, 0x6c, 0x05, 0x0e, 0x27, 0xf8, 0x76,
    0xf9, 0x0e, 0x15, 0x82, 0x96, 0x7f, 0x90, 0x7e, 0x8b, 0x7e, 0x8b, 0x7f,
    0x86, 0x82, 0x80, 0x08, 0xfc, 0x18, 0xfc, 0x18, 0x05, 0x82, 0x82, 0x86,
    0x7f, 0x8b, 0x7e, 0x8b, 0x7e, 0x90, 0x7f, 0x94, 0x82, 0x08, 0xb7, 0x5f,
    0x05, 0x94, 0x82, 0x97, 0x86, 0x98, 0x8a, 0x98, 0x8a, 0x97, 0x90, 0x94,
    0x94, 0x08, 0xf7, 0xca, 0xf7, 0xca, 0xf7, 0xca, 0xfb, 0xca, 0x05, 0x94,
    0x82, 0x97, 0x86, 0x98, 0x8c, 0x98, 0x8c, 0x97, 0x90, 0x94, 0x94, 0x08,
    0xb7, 0xb7, 0x05, 0x94, 0x94, 0x90, 0x97, 0x8b, 0x98, 0x8b, 0x98, 0x86,
    0x97, 0x82, 0x94, 0x08, 0x0e, 0x27, 0xf8, 0x32, 0xf7, 0x1a, 0x15, 0x94,
    0x80, 0x97, 0x86, 0x98, 0x8b, 0x98, 0x8b, 0x97, 0x90, 0x94, 0x96, 0x08,
    0xf8, 0x18, 0xf8, 0x18, 0x05, 0x94, 0x94, 0x90, 0x97, 0x8b, 0x98, 0x8b,
    0x98, 0x86, 0x97, 0x82, 0x94, 0x08, 0x5f, 0xb7, 0x05, 0x82, 0x94, 0x7f,
    0x90, 0x7e, 0x8c, 0x7e, 0x8c, 0x7f, 0x86, 0x82, 0x82, 0x08, 0xfb, 0xca,
    0xfb, 0xca, 0xfb, 0xca, 0xf7, 0xca, 0x05, 0x82, 0x94, 0x7f, 0x90, 0x7e,
    0x8a, 0x7e, 0x8a, 0x7f, 0x86, 0x82, 0x82, 0x08, 0x5f, 0x5f, 0x05, 0x82,
    0x82, 0x86, 0x7f, 0x8b, 0x7e, 0x8b, 0x7e, 0x90, 0x7f, 0x94, 0x82, 0x08,
    0x0e, 0xf7, 0xb0, 0x1c, 0x04, 0xec, 0xf7, 0x64, 0x15, 0x94, 0x94, 0x90,
    0x97, 0x8b, 0x98, 0x8b, 0x98, 0x86, 0x97, 0x82, 0x94, 0x08, 0x75, 0xa1,
    0x05, 0x82, 0x94, 0x7f, 0x90, 0x7d, 0x8b, 0x7d, 0x8b, 0x7f, 0x86, 0x82,
    0x82, 0x08, 0x3b, 0x35, 0x05, 0xf8, 0x50, 0x07, 0x8b, 0x98, 0x86, 0x97,
    0x82, 0x94, 0x82, 0x94, 0x7f, 0x90, 0x7e, 0x8b, 0x08, 0xfc, 0x7c, 0x06,
    0x76, 0x8b, 0x7c, 0x81, 0x83, 0x77, 0x83, 0x77, 0x8e, 0x7a, 0x9a, 0x7c,
    0x08, 0xab, 0x6b, 0x05, 0x96, 0x82, 0x96, 0x86, 0x97, 0x8b, 0x08, 0xf8,
    0x0c, 0xfc, 0x00, 0x06, 0x3b, 0xe1, 0x05, 0x82, 0x94, 0x7f, 0x90, 0x7d,
    0x8b, 0x7d, 0x8b, 0x7f, 0x86, 0x82, 0x82, 0x08, 0x75, 0x75, 0x05, 0x82,
    0x82, 0x86, 0x7f, 0x8b, 0x7e, 0x8b, 0x7e, 0x90, 0x7f, 0x94, 0x82, 0x08,
    0xf7, 0x5e, 0xfb, 0x5c, 0x05, 0x94, 0x82, 0x97, 0x86, 0x98, 0x8b, 0x98,
    0x8b, 0x97, 0x90, 0x94, 0x94, 0x08, 0xfb, 0xdc, 0xf7, 0x3e, 0x15, 0x80,
    0x94, 0x80, 0x90, 0x7f, 0x8b, 0x08, 0xfc, 0x0c, 0xf8, 0x00, 0x06, 0xdb,
    0x35, 0x05, 0x94, 0x82, 0x97, 0x86, 0x99, 0x8b, 0x99, 0x8b, 0x97, 0x90,
    0x94, 0x94, 0x08, 0xa1, 0xa1, 0x05, 0x94, 0x94, 0x90, 0x97, 0x8b, 0x98,
    0x8b, 0x98, 0x86, 0x97, 0x82, 0x94, 0x08, 0xfb, 0x5e, 0xf7, 0x5c, 0x05,
    0x82, 0x94, 0x7f, 0x90, 0x7e, 0x8b, 0x7e, 0x8b, 0x7f, 0x86, 0x82, 0x82,
    0x08, 0xfb, 0x5e, 0xfb, 0x5c, 0x05, 0x82, 0x82, 0x86, 0x7f, 0x8b, 0x7e,
    0x8b, 0x7e, 0x90, 0x7f, 0x94, 0x82, 0x08, 0xa1, 0x75, 0x05, 0x94, 0x82,
    0x97, 0x86, 0x99, 0x8b, 0x99, 0x8b, 0x97, 0x90, 0x94, 0x94, 0x08, 0xdb,
    0xe1, 0x05, 0xfc, 0x50, 0x07, 0x8b, 0x7e, 0x90, 0x7f, 0x94, 0x82, 0x94,
    0x82, 0x97, 0x86, 0x98, 0x8b, 0x08, 0xf8, 0x7c, 0x06, 0xa0, 0x8b, 0x9a,
    0x95, 0x93, 0x9f, 0x93, 0x9f, 0x88, 0x9c, 0x7c, 0x9a, 0x08, 0x0e, 0xa7,
    0xfa, 0x34, 0xf9, 0x14, 0x15, 0xfc, 0x14, 0x06, 0xfb, 0x14, 0xf7, 0x14,
    0x05, 0xfb, 0xd4, 0x06, 0x70, 0x8b, 0x75, 0x82, 0x78, 0x78, 0x78, 0x78,
    0x82, 0x75, 0x8b, 0x70, 0x08, 0xfc, 0xd4, 0x07, 0x8b, 0x70, 0x94, 0x75,
    0x9e, 0x78, 0x9e, 0x78, 0xa1, 0x82, 0xa6, 0x8b, 0x08, 0xf9, 0xd4, 0x06,
    0xa6, 0x8b, 0xa1, 0x94, 0x9e, 0x9e, 0x9e, 0x9e, 0x94, 0xa1, 0x8b, 0xa6,
    0x08, 0xf8, 0x54, 0x07, 0x8b, 0xa6, 0x82, 0xa1, 0x78, 0x9e, 0x78, 0x9e,
    0x75, 0x94, 0x70, 0x8b, 0x08, 0x0e, 0xa7, 0xf8, 0xe4, 0xf7, 0x14, 0x15,
    0x98, 0x8b, 0x97, 0x90, 0x94, 0x94, 0x94, 0x94, 0x90, 0x97, 0x8b, 0x98,
    0x08, 0xf7, 0xe4, 0xf7, 0x44, 0x07, 0x9c, 0x8b, 0x97, 0x93, 0x92, 0x9c,
    0x92, 0x9c, 0x88, 0x99, 0x7f, 0x97, 0x08, 0xfb, 0xc4, 0xf7, 0xc4, 0x05,
    0x83, 0x93, 0x82, 0x8f, 0x80, 0x8b, 0x80, 0x8b, 0x82, 0x87, 0x83, 0x83,
    0x08, 0xfb, 0xc4, 0xfb, 0xc4, 0x05, 0x7f, 0x7f, 0x88, 0x7d, 0x92, 0x7a,
    0x92, 0x7a, 0x97, 0x83, 0x9c, 0x8b, 0x08, 0xf7, 0x44, 0xfb, 0xe4, 0x06,
    0x8b, 0x7e, 0x90, 0x7f, 0x94, 0x82, 0x94, 0x82, 0x97, 0x86, 0x98, 0x8b,
    0x08, 0xf8, 0xe4, 0x9b, 0x15, 0x8b, 0x98, 0x86, 0x97, 0x82, 0x94, 0x82,
    0x94, 0x7f, 0x90, 0x7e, 0x8b, 0x08, 0xfb, 0xa4, 0x7b, 0x06, 0x8b, 0x6c,
    0x80, 0x71, 0x75, 0x75, 0x75, 0x75, 0x71, 0x80, 0x6c, 0x8b, 0x08, 0xfb,
    0x34, 0x06, 0x6c, 0x8b, 0x71, 0x96, 0x75, 0xa1, 0x75, 0xa1, 0x80, 0xa5,
    0x8b, 0xaa, 0x08, 0x9b, 0xfb, 0xa4, 0x07, 0x7e, 0x8b, 0x7f, 0x86, 0x82,
    0x82, 0x82, 0x82, 0x86, 0x7f, 0x8b, 0x7e, 0x08, 0xfb, 0x74, 0x07, 0x8b,
    0x7e, 0x90, 0x7f, 0x94, 0x82, 0x94, 0x82, 0x97, 0x86, 0x98, 0x8b, 0x08,
    0xfa, 0x34, 0x06, 0x98, 0x8b, 0x97, 0x90, 0x94, 0x94, 0x94, 0x94, 0x90,
    0x97, 0x8b, 0x98, 0x08, 0xfb, 0x8c, 0xbb, 0x15, 0x8b, 0x80, 0x87, 0x82,
    0x83, 0x83, 0x83, 0x83, 0x82, 0x87, 0x80, 0x8b, 0x80, 0x8b, 0x82, 0x8f,
    0x83, 0x93, 0x83, 0x93, 0x87, 0x94, 0x8b, 0x96, 0x8b, 0x96, 0x8f, 0x94,
    0x93, 0x93, 0x93, 0x93, 0x94, 0x8f, 0x96, 0x8b, 0x96, 0x8b, 0x94, 0x87,
    0x93, 0x83, 0x93, 0x83, 0x8f, 0x82, 0x8b, 0x80, 0x08, 0xf7, 0x14, 0x16,
    0x8b, 0x80, 0x87, 0x82, 0x83, 0x83, 0x83, 0x83, 0x82, 0x87, 0x80, 0x8b,
    0x80, 0x8b, 0x82, 0x8f, 0x83, 0x93, 0x83, 0x93, 0x87, 0x94, 0x8b, 0x96,
    0x8b, 0x96, 0x8f, 0x94, 0x93, 0x93, 0x93, 0x93, 0x94, 0x8f, 0x96, 0x8b,
    0x96, 0x8b, 0x94, 0x87, 0x93, 0x83, 0x93, 0x83, 0x8f, 0x82, 0x8b, 0x80,
    0x08, 0x0e, 0xa7, 0xfa, 0x6e, 0xf9, 0xe2, 0x15, 0xfb, 0x64, 0xbb, 0x05,
    0x72, 0x92, 0x79, 0x82, 0x80, 0x73, 0x08, 0x2b, 0xfb, 0x74, 0x05, 0x82,
    0x74, 0x8f, 0x79, 0x9e, 0x7c, 0x08, 0xf7, 0x0c, 0x27, 0x05, 0x67, 0x3e,
    0x5b, 0x45, 0x4e, 0x4e, 0x4e, 0x4e, 0x46, 0x5a, 0x3c, 0x67, 0x08, 0x29,
    0xf7, 0x0c, 0x05, 0x7b, 0x9e, 0x78, 0x8f, 0x76, 0x82, 0x08, 0xfb, 0x74,
    0x2b, 0x05, 0x72, 0x80, 0x81, 0x79, 0x92, 0x72, 0x08, 0xbb, 0xfb, 0x64,
    0x05, 0x90, 0x72, 0x9b, 0x7e, 0xa4, 0x8b, 0xf7, 0x94, 0x8b, 0xf7, 0x6f,
    0xe6, 0xf7, 0x49, 0xf7, 0x49, 0xf7, 0x49, 0xf7, 0x49, 0xe6, 0xf7, 0x6f,
    0x8b, 0xf7, 0x94, 0x8b, 0xa4, 0x7e, 0x9b, 0x72, 0x90, 0x08, 0x0e, 0x27,
    0xf8, 0xc0, 0xf8, 0x14, 0x15, 0xf7, 0xe0, 0xf7, 0xe0, 0x05, 0x97, 0x97,
    0x8b, 0x96, 0x7f, 0x96, 0x6b, 0xac, 0x64, 0x9c, 0x5c, 0x8b, 0x5c, 0x8b,
    0x64, 0x7a, 0x6b, 0x6a, 0x08, 0xfb, 0x7c, 0xfb, 0x7a, 0x59, 0xbd, 0x05,
    0x94, 0xa2, 0x90, 0xa2, 0x8b, 0xa3, 0x8b, 0xc0, 0x78, 0xb9, 0x66, 0xb0,
    0x66, 0xb0, 0x5d, 0x9e, 0x56, 0x8b, 0x56, 0x8b, 0x5d, 0x78, 0x66, 0x66,
    0x66, 0x66, 0x78, 0x5d, 0x8b, 0x56, 0x8b, 0x56, 0x9e, 0x5d, 0xb0, 0x66,
    0xb0, 0x66, 0xb9, 0x78, 0xc0, 0x8b, 0x94, 0x8b, 0x94, 0x8c, 0x93, 0x8c,
    0x08, 0xcd, 0x49, 0x49, 0x49, 0x05, 0x83, 0x8c, 0x82, 0x8c, 0x82, 0x8b,
    0x56, 0x8b, 0x5d, 0x78, 0x66, 0x66, 0x66, 0x66, 0x78, 0x5d, 0x8b, 0x56,
    0x8b, 0x56, 0x9e, 0x5d, 0xb0, 0x66, 0xb0, 0x66, 0xb9, 0x78, 0xc0, 0x8b,
    0xc0, 0x8b, 0xb9, 0x9e, 0xb0, 0xb0, 0xb0, 0xb0, 0x9e, 0xb9, 0x8b, 0xc0,
    0x8b, 0xa3, 0x86, 0xa2, 0x82, 0xa2, 0x08, 0xbd, 0xbd, 0xf7, 0x7c, 0xfb,
    0x7a, 0x05, 0xab, 0x6a, 0xb2, 0x7a, 0xba, 0x8b, 0xba, 0x8b, 0xb2, 0x9c,
    0xab, 0xac, 0x97, 0x96, 0x8b, 0x96, 0x7f, 0x97, 0x08, 0xfd, 0x4c, 0xf8,
    0xa0, 0x15, 0x7a, 0x8b, 0x7c, 0x91, 0x7e, 0x98, 0x7e, 0x98, 0x85, 0x9a,
    0x8b, 0x9c, 0x8b, 0x9c, 0x91, 0x9a, 0x98, 0x98, 0x98, 0x98, 0x9a, 0x91,
    0x9c, 0x8b, 0x9c, 0x8b, 0x9a, 0x85, 0x98, 0x7e, 0x98, 0x7e, 0x91, 0x7c,
    0x8b, 0x7a, 0x8b, 0x7a, 0x85, 0x7c, 0x7e, 0x7e, 0x7e, 0x7e, 0x7c, 0x85,
    0x7a, 0x8b, 0x08, 0xfc, 0x94, 0x04, 0x7a, 0x8b, 0x7c, 0x91, 0x7e, 0x98,
    0x7e, 0x98, 0x85, 0x9a, 0x8b, 0x9c, 0x8b, 0x9c, 0x91, 0x9a, 0x98, 0x98,
    0x98, 0x98, 0x9a, 0x91, 0x9c, 0x8b, 0x9c, 0x8b, 0x9a, 0x85, 0x98, 0x7e,
    0x98, 0x7e, 0x91, 0x7c, 0x8b, 0x7a, 0x8b, 0x7a, 0x85, 0x7c, 0x7e, 0x7e,
    0x7e, 0x7e, 0x7c, 0x85, 0x7a, 0x8b, 0x08, 0x0e, 0x27, 0xf9, 0x14, 0x16,
    0xfb, 0xe4, 0x06, 0x6c, 0x8b, 0x71, 0x96, 0x75, 0xa1, 0x75, 0xa1, 0x80,
    0xa5, 0x8b, 0xaa, 0x08, 0xf8, 0xe4, 0xfb, 0x24, 0x07, 0x7e, 0x8b, 0x7f,
    0x86, 0x82, 0x82, 0x82, 0x82, 0x86, 0x7f, 0x8b, 0x7e, 0x08, 0xfd, 0x74,
    0x07, 0x8b, 0x7e, 0x90, 0x7f, 0x94, 0x82, 0x94, 0x82, 0x97, 0x86, 0x98,
    0x8b, 0x08, 0xf8, 0xb4, 0x06, 0x98, 0x8b, 0x97, 0x90, 0x94, 0x94, 0x94,
    0x94, 0x90, 0x97, 0x8b, 0x98, 0x08, 0xf9, 0x94, 0x04, 0xf7, 0x64, 0xfb,
    0xe4, 0x07, 0x7e, 0x8b, 0x7f, 0x86, 0x82, 0x82, 0x82, 0x82, 0x86, 0x7f,
    0x8b, 0x7e, 0x08, 0xfd, 0x74, 0x07, 0x8b, 0x7e, 0x90, 0x7f, 0x94, 0x82,
    0x94, 0x82, 0x97, 0x86, 0x98, 0x8b, 0x08, 0xf8, 0xb4, 0x06, 0x98, 0x8b,
    0x97, 0x90, 0x94, 0x94, 0x94, 0x94, 0x90, 0x97, 0x8b, 0x98, 0x08, 0xf8,
    0xa4, 0xfb, 0x64, 0x07, 0x7e, 0x8b, 0x7f, 0x90, 0x82, 0x94, 0x82, 0x94,
    0x86, 0x97, 0x8b, 0x98, 0x08, 0xf7, 0x86, 0xc9, 0x15, 0xfb, 0x18, 0xf7,
    0x18, 0x05, 0x82, 0x94, 0x7f, 0x90, 0x7e, 0x8b, 0x08, 0x7f, 0xfb, 0x54,
    0xf7, 0x54, 0x97, 0x06, 0x8b, 0x98, 0x86, 0x97, 0x82, 0x94, 0x08, 0x0e,
    0x27, 0xf9, 0xf8, 0xf9, 0x10, 0x15, 0xfb, 0x3c, 0xf7, 0x3c, 0x05, 0x78,
    0x9e, 0x75, 0x94, 0x70, 0x8b, 0x08, 0xfc, 0xac, 0x06, 0x70, 0x8b, 0x75,
    0x82, 0x78, 0x78, 0x78, 0x78, 0x82, 0x75, 0x8b, 0x70, 0x08, 0xfd, 0x54,
    0x07, 0x8b, 0x70, 0x94, 0x75, 0x9e, 0x78, 0x9e, 0x78, 0xa1, 0x82, 0xa6,
    0x8b, 0x08, 0xf9, 0x54, 0x06, 0xa6, 0x8b, 0xa1, 0x94, 0x9e, 0x9e, 0x9e,
    0x9e, 0x94, 0xa1, 0x8b, 0xa6, 0x08, 0xf8, 0xac, 0x07, 0x8b, 0xa6, 0x82,
    0xa1, 0x78, 0x9e, 0x08, 0xfc, 0x38, 0xfc, 0xd0, 0x15, 0x67, 0x8b, 0x6d,
    0x97, 0x72, 0xa4, 0x72, 0xa4, 0x7f, 0xa9, 0x8b, 0xaf, 0x8b, 0xaf, 0x97,
    0xa9, 0xa4, 0xa4, 0xa4, 0xa4, 0xa9, 0x97, 0xaf, 0x8b, 0xaf, 0x8b, 0xa9,
    0x7f, 0xa4, 0x72, 0xa4, 0x72, 0x97, 0x6d, 0x8b, 0x67, 0x8b, 0x67, 0x7f,
    0x6d, 0x72, 0x72, 0x72, 0x72, 0x6d, 0x7f, 0x67, 0x8b, 0x08, 0xf7, 0x54,
    0xf8, 0xf6, 0x15, 0xfb, 0x5e, 0x07, 0x8b, 0x7b, 0x83, 0x83, 0x7b, 0x8b,
    0x08, 0xfc, 0x64, 0x06, 0x7b, 0x8b, 0x83, 0x93, 0x8b, 0x9b, 0x08, 0xf7,
    0x64, 0x07, 0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b, 0x08, 0xf8, 0x5e, 0x06,
    0x90, 0x8b, 0x91, 0x88, 0x90, 0x86, 0x08, 0x91, 0x85, 0x05, 0x90, 0x86,
    0x8e, 0x85, 0x8b, 0x86, 0x08, 0x0e, 0xfb, 0xf8, 0xf8, 0xe4, 0xf8, 0xd4,
    0x15, 0xfb, 0x7a, 0x06, 0xdf, 0xf7, 0x98, 0x05, 0x8f, 0x9a, 0x88, 0x98,
    0x82, 0x98, 0x82, 0x98, 0x7e, 0x91, 0x7b, 0x8b, 0x08, 0xfb, 0xb4, 0x06,
    0x83, 0x8b, 0x84, 0x89, 0x84, 0x88, 0x84, 0x88, 0x86, 0x86, 0x86, 0x84,
    0x86, 0x84, 0x88, 0x84, 0x8a, 0x83, 0x08, 0x4b, 0xfc, 0x74, 0x05, 0x8a,
    0x82, 0x8c, 0x82, 0x8f, 0x83, 0x8f, 0x83, 0x91, 0x84, 0x93, 0x86, 0x93,
    0x86, 0x94, 0x88, 0x94, 0x8b, 0x08, 0xf7, 0x82, 0x06, 0x2f, 0xfc, 0x18,
    0x05, 0x87, 0x7b, 0x8e, 0x7d, 0x94, 0x7f, 0x94, 0x7f, 0x98, 0x85, 0x9b,
    0x8b, 0x9e, 0x8b, 0x99, 0x93, 0x94, 0x9b, 0x08, 0xf7, 0xf4, 0xf8, 0xf4,
    0x05, 0x94, 0x9b, 0x8b, 0x9b, 0x82, 0x9b, 0x82, 0x9b, 0x7d, 0x93, 0x78,
    0x8b, 0x08, 0x0e, 0x27, 0xf7, 0x94, 0xf8, 0xa4, 0x15, 0x8b, 0xaa, 0x96,
    0xa5, 0xa1, 0xa1, 0xa1, 0xa1, 0xa5, 0x96, 0xaa, 0x8b, 0x08, 0xf7, 0xa4,
    0xf7, 0x24, 0x06, 0x8b, 0x98, 0x86, 0x97, 0x82, 0x94, 0x82, 0x94, 0x7f,
    0x90, 0x7e, 0x8b, 0x08, 0xfb, 0x36, 0x06, 0x73, 0xb6, 0x66, 0xa0, 0x5a,
    0x8b, 0x5a, 0x8b, 0x66, 0x76, 0x73, 0x60, 0x08, 0xfb, 0x36, 0x06, 0x7e,
    0x8b, 0x7f, 0x86, 0x82, 0x82, 0x82, 0x82, 0x86, 0x7f, 0x8b, 0x7e, 0x08,
    0xfd, 0x34, 0x07, 0x8b, 0x7e, 0x90, 0x7f, 0x94, 0x82, 0x94, 0x82, 0x97,
    0x86, 0x98, 0x8b, 0x08, 0xf7, 0x64, 0x06, 0xcb, 0xf9, 0x84, 0x15, 0x98,
    0x8b, 0x97, 0x86, 0x94, 0x82, 0x94, 0x82, 0x90, 0x7f, 0x8b, 0x7e, 0x8b,
    0x7e, 0x86, 0x7f, 0x82, 0x82, 0x82, 0x82, 0x7f, 0x86, 0x7e, 0x8b, 0x7e,
    0x8b, 0x7f, 0x90, 0x82, 0x94, 0x82, 0x94, 0x86, 0x97, 0x8b, 0x98, 0x8b,
    0x98, 0x90, 0x97, 0x94, 0x94, 0x94, 0x94, 0x97, 0x90, 0x98, 0x8b, 0x08,
    0xf8, 0x04, 0xfc, 0x84, 0x15, 0x7e, 0x8b, 0x7f, 0x90, 0x82, 0x94, 0x82,
    0x94, 0x86, 0x97, 0x8b, 0x98, 0x08, 0xf7, 0x64, 0xfb, 0xa4, 0x07, 0x7e,
    0x8b, 0x7f, 0x86, 0x82, 0x82, 0x82, 0x82, 0x86, 0x7f, 0x8b, 0x7e, 0x08,
    0xfc, 0xf4, 0x07, 0x8b, 0x7e, 0x90, 0x7f, 0x94, 0x82, 0x94, 0x82, 0x97,
    0x86, 0x98, 0x8b, 0x08, 0xf8, 0x74, 0x06, 0x98, 0x8b, 0x97, 0x90, 0x94,
    0x94, 0x94, 0x94, 0x90, 0x97, 0x8b, 0x98, 0x08, 0xf8, 0x24, 0x07, 0xd7,
    0x04, 0x8b, 0x98, 0x86, 0x97, 0x82, 0x94, 0x08, 0xfb, 0x18, 0xf7, 0x18,
    0x05, 0x82, 0x94, 0x7f, 0x90, 0x7e, 0x8b, 0x08, 0x7f, 0xfb, 0x54, 0xf7,
    0x54, 0x06, 0x0e, 0x27, 0xf8, 0x54, 0xfb, 0x14, 0x15, 0xae, 0x8b, 0xa9,
    0x97, 0xa4, 0xa4, 0xa4, 0xa4, 0x98, 0xa9, 0x8b, 0xaf, 0x08, 0xfb, 0x94,
    0x06, 0x8b, 0x67, 0x98, 0x6d, 0xa4, 0x72, 0xa4, 0x72, 0xa9, 0x7f, 0xae,
    0x8b, 0x08, 0xf8, 0x42, 0xf7, 0xc0, 0x15, 0x8a, 0x8c, 0x89, 0x8e, 0x88,
    0x8f, 0x77, 0x9f, 0x7b, 0x9d, 0x80, 0x9b, 0x80, 0x9b, 0x7e, 0xa9, 0x7e,
    0xb8, 0x7e, 0xb8, 0x84, 0xbe, 0x8b, 0xc6, 0x8b, 0xbe, 0x80, 0xba, 0x75,
    0xb7, 0x75, 0xb7, 0x6d, 0xb0, 0x64, 0xa8, 0x64, 0xa8, 0x5f, 0x9f, 0x5a,
    0x94, 0x08, 0xb5, 0x07, 0x8b, 0x9c, 0x85, 0x9a, 0x7e, 0x98, 0x7e, 0x98,
    0x7c, 0x91, 0x7a, 0x8b, 0x7a, 0x8b, 0x7c, 0x85, 0x7e, 0x7e, 0x7e, 0x7e,
    0x85, 0x7c, 0x8b, 0x7a, 0x08, 0x61, 0x07, 0x40, 0x7c, 0x4e, 0x67, 0x5b,
    0x52, 0x5b, 0x52, 0x73, 0x47, 0x8b, 0x3e, 0x8b, 0x50, 0x84, 0x58, 0x7e,
    0x5e, 0x7e, 0x5e, 0x7e, 0x6d, 0x80, 0x7b, 0x80, 0x7b, 0x7b, 0x79, 0x77,
    0x77, 0x88, 0x87, 0x89, 0x88, 0x8a, 0x8a, 0x7f, 0x7e, 0x85, 0x7c, 0x8b,
    0x7b, 0x8b, 0x80, 0x8e, 0x81, 0x90, 0x81, 0x08, 0x90, 0x81, 0x93, 0x83,
    0x95, 0x85, 0x95, 0x85, 0x96, 0x88, 0x97, 0x8b, 0x08, 0xf9, 0x94, 0x06,
    0x9e, 0x8b, 0x9a, 0x91, 0x97, 0x98, 0x97, 0x98, 0x91, 0x9a, 0x8b, 0x9c,
    0x8b, 0x9b, 0x85, 0x9a, 0x7f, 0x98, 0x08, 0x0e, 0xf7, 0x30, 0xfa, 0xb4,
    0x16, 0xa6, 0x8b, 0xa1, 0x94, 0x9e, 0x9e, 0x9e, 0x9e, 0x94, 0xa1, 0x8b,
    0xa6, 0x08, 0xf8, 0xd4, 0x07, 0x8b, 0xa6, 0x82, 0xa1, 0x78, 0x9e, 0x78,
    0x9e, 0x75, 0x94, 0x70, 0x8b, 0x08, 0xfe, 0x54, 0x06, 0x70, 0x8b, 0x75,
    0x82, 0x78, 0x78, 0x78, 0x78, 0x82, 0x75, 0x8b, 0x70, 0x08, 0xfc, 0xd4,
    0x07, 0x8b, 0x70, 0x94, 0x75, 0x9e, 0x78, 0x9e, 0x78, 0xa1, 0x82, 0xa6,
    0x8b, 0x08, 0xf7, 0x34, 0xf8, 0xac, 0x15, 0x8b, 0x7b, 0x83, 0x83, 0x7b,
    0x8b, 0x08, 0x3b, 0x06, 0x7b, 0x8b, 0x83, 0x93, 0x8b, 0x9b, 0x08, 0xdb,
    0x07, 0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b, 0x08, 0xdb, 0x06, 0x9b, 0x8b,
    0x93, 0x83, 0x8b, 0x7b, 0x08, 0xf7, 0x54, 0x3b, 0x15, 0x8b, 0x7b, 0x83,
    0x83, 0x7b, 0x8b, 0x08, 0x3b, 0x06, 0x7b, 0x8b, 0x83, 0x93, 0x8b, 0x9b,
    0x08, 0xdb, 0x07, 0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b, 0x08, 0xdb, 0x06,
    0x9b, 0x8b, 0x93, 0x83, 0x8b, 0x7b, 0x08, 0xf7, 0x54, 0x3b, 0x15, 0x8b,
    0x7b, 0x83, 0x83, 0x7b, 0x8b, 0x08, 0x3b, 0x06, 0x7b, 0x8b, 0x83, 0x93,
    0x8b, 0x9b, 0x08, 0xdb, 0x07, 0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b, 0x08,
    0xdb, 0x06, 0x9b, 0x8b, 0x93, 0x83, 0x8b, 0x7b, 0x08, 0xf7, 0x54, 0x3b,
    0x15, 0x8b, 0x7b, 0x83, 0x83, 0x7b, 0x8b, 0x08, 0x3b, 0x06, 0x7b, 0x8b,
    0x83, 0x93, 0x8b, 0x9b, 0x08, 0xdb, 0x07, 0x8b, 0x9b, 0x93, 0x93, 0x9b,
    0x8b, 0x08, 0xdb, 0x06, 0x9b, 0x8b, 0x93, 0x83, 0x8b, 0x7b, 0x08, 0xf7,
    0x54, 0x3b, 0x15, 0x8b, 0x7b, 0x83, 0x83, 0x7b, 0x8b, 0x08, 0x3b, 0x06,
    0x7b, 0x8b, 0x83, 0x93, 0x8b, 0x9b, 0x08, 0xdb, 0x07, 0x8b, 0x9b, 0x93,
    0x93, 0x9b, 0x8b, 0x08, 0xdb, 0x06, 0x9b, 0x8b, 0x93, 0x83, 0x8b, 0x7b,
    0x08, 0xfd, 0x34, 0xfb, 0xa4, 0x15, 0x8b, 0x7b, 0x83, 0x83, 0x7b, 0x8b,
    0x08, 0x3b, 0x06, 0x7b, 0x8b, 0x83, 0x93, 0x8b, 0x9b, 0x08, 0xdb, 0x07,
    0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b, 0x08, 0xdb, 0x06, 0x9b, 0x8b, 0x93,
    0x83, 0x8b, 0x7b, 0x08, 0xf7, 0x54, 0x3b, 0x15, 0x8b, 0x7b, 0x83, 0x83,
    0x7b, 0x8b, 0x08, 0x3b, 0x06, 0x7b, 0x8b, 0x83, 0x93, 0x8b, 0x9b, 0x08,
    0xdb, 0x07, 0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b, 0x08, 0xdb, 0x06, 0x9b,
    0x8b, 0x93, 0x83, 0x8b, 0x7b, 0x08, 0xf7, 0x54, 0x3b, 0x15, 0x8b, 0x7b,
    0x83, 0x83, 0x7b, 0x8b, 0x08, 0x3b, 0x06, 0x7b, 0x8b, 0x83, 0x93, 0x8b,
    0x9b, 0x08, 0xdb, 0x07, 0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b, 0x08, 0xdb,
    0x06, 0x9b, 0x8b, 0x93, 0x83, 0x8b, 0x7b, 0x08, 0xf7, 0x54, 0x3b, 0x15,
    0x8b, 0x7b, 0x83, 0x83, 0x7b, 0x8b, 0x08, 0x3b, 0x06, 0x7b, 0x8b, 0x83,
    0x93, 0x8b, 0x9b, 0x08, 0xdb, 0x07, 0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b,
    0x08, 0xdb, 0x06, 0x9b, 0x8b, 0x93, 0x83, 0x8b, 0x7b, 0x08, 0xfd, 0x34,
    0xfb, 0xa4, 0x15, 0x8b, 0x7b, 0x83, 0x83, 0x7b, 0x8b, 0x08, 0x3b, 0x06,
    0x7b, 0x8b, 0x83, 0x93, 0x8b, 0x9b, 0x08, 0xdb, 0x07, 0x8b, 0x9b, 0x93,
    0x93, 0x9b, 0x8b, 0x08, 0xdb, 0x06, 0x9b, 0x8b, 0x93, 0x83, 0x8b, 0x7b,
    0x08, 0xf8, 0xd4, 0x3b, 0x15, 0x8b, 0x7b, 0x83, 0x83, 0x7b, 0x8b, 0x08,
    0xfc, 0x64, 0x06, 0x7b, 0x8b, 0x83, 0x93, 0x8b, 0x9b, 0x08, 0xdb, 0x07,
    0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b, 0x08, 0xf8, 0x64, 0x06, 0x9b, 0x8b,
    0x93, 0x83, 0x8b, 0x7b, 0x08, 0xf7, 0x54, 0x3b, 0x15, 0x8b, 0x7b, 0x83,
    0x83, 0x7b, 0x8b, 0x08, 0x3b, 0x06, 0x7b, 0x8b, 0x83, 0x93, 0x8b, 0x9b,
    0x08, 0xdb, 0x07, 0x8b, 0x9b, 0x93, 0x93, 0x9b, 0x8b, 0x08, 0xdb, 0x06,
    0x9b, 0x8b, 0x93, 0x83, 0x8b, 0x7b, 0x08, 0x0e, 0xa7, 0xfa, 0x0e, 0xfa,
    0x0c, 0x15, 0xfd, 0xd4, 0xfc, 0x12, 0x05, 0x6c, 0x7c, 0x79, 0x75, 0x84,
    0x6d, 0x84, 0x6d, 0x91, 0x70, 0x9d, 0x72, 0x9d, 0x72, 0xa5, 0x7f, 0xac,
    0x8b, 0x08, 0xf7, 0xf4, 0xfb, 0xf4, 0x06, 0x8b, 0x73, 0x93, 0x76, 0x9a,
    0x7a, 0x9a, 0x7a, 0x9d, 0x80, 0x9f, 0x87, 0x9f, 0x87, 0xa0, 0x8e, 0xa0,
    0x94, 0xa0, 0x94, 0x9b, 0x9b, 0x96, 0xa2, 0x08, 0xf8, 0x12, 0xf9, 0xd4,
    0x05, 0x9b, 0xb0, 0x83, 0xae, 0x6c, 0xaa, 0x6c, 0xaa, 0x68, 0x93, 0x66,
    0x7b, 0x08, 0x0e, 0xfb, 0x78, 0xf8, 0x54, 0xf9, 0x04, 0x15, 0xf7, 0xa4,
    0xfc, 0x24, 0x07, 0x7e, 0x8b, 0x7f, 0x86, 0x82, 0x82, 0x82, 0x82, 0x86,
    0x7f, 0x8b, 0x7e, 0x08, 0xfe, 0x34, 0x07, 0x8b, 0x7e, 0x90, 0x7f, 0x94,
    0x82, 0x94, 0x82, 0x97, 0x86, 0x98, 0x8b, 0x08, 0xf9, 0x34, 0x06, 0x98,
    0x8b, 0x97, 0x90, 0x94, 0x94, 0x94, 0x94, 0x90, 0x97, 0x8b, 0x98, 0x08,
    0xf9, 0x24, 0xfb, 0xa4, 0x07, 0x7e, 0x8b, 0x7f, 0x90, 0x82, 0x94, 0x82,
    0x94, 0x86, 0x97, 0x8b, 0x98, 0x08, 0xf7, 0xd4, 0xa7, 0x15, 0x8b, 0x98,
    0x86, 0x97, 0x82, 0x94, 0x08, 0xfb, 0x58, 0xf7, 0x58, 0x05, 0x82, 0x94,
    0x7f, 0x90, 0x7e, 0x8b, 0x08, 0x7f, 0xfb, 0x94, 0xf7, 0x94, 0x06, 0x0e,
    0xf7, 0xb0, 0x1c, 0x04, 0xf6, 0xf8, 0xde, 0x15, 0xfb, 0x08, 0xf7, 0x00,
    0xfb, 0x1a, 0xd4, 0xfb, 0x2c, 0xb1, 0xfb, 0x2c, 0xb1, 0xfb, 0x2c, 0x8b,
    0xfb, 0x2c, 0x65, 0xfb, 0x2c, 0x65, 0xfb, 0x1a, 0x42, 0xfb, 0x08, 0xfb,
    0x00, 0x84, 0x86, 0x88, 0x83, 0x8b, 0x82, 0x8b, 0x82, 0x8e, 0x83, 0x92,
    0x84, 0x08, 0xcf, 0x47, 0x05, 0x9a, 0x7c, 0x99, 0x8b, 0x9a, 0x9a, 0xf7,
    0x27, 0xf7, 0x19, 0xf7, 0x40, 0xce, 0xf7, 0x5b, 0x8b, 0xf7, 0x5b, 0x8b,
    0xf7, 0x40, 0x48, 0xf7, 0x27, 0xfb, 0x19, 0x9a, 0x7c, 0x99, 0x8b, 0x9a,
    0x9a, 0x08, 0xcf, 0xcf, 0x05, 0x92, 0x92, 0x8e, 0x93, 0x8b, 0x94, 0x8b,
    0x94, 0x88, 0x93, 0x84, 0x90, 0x08, 0xfd, 0x0a, 0xfc, 0x1e, 0x15, 0x67,
    0x8b, 0x6d, 0x7f, 0x72, 0x72, 0x72, 0x72, 0x7f, 0x6d, 0x8b, 0x67, 0x8b,
    0x67, 0x97, 0x6d, 0xa4, 0x72, 0xa4, 0x72, 0xa9, 0x7f, 0xaf, 0x8b, 0xaf,
    0x8b, 0xa9, 0x97, 0xa4, 0xa4, 0xa4, 0xa4, 0x97, 0xa9, 0x8b, 0xaf, 0x8b,
    0xaf, 0x7f, 0xa9, 0x72, 0xa4, 0x72, 0xa4, 0x6d, 0x97, 0x67, 0x8b, 0x08,
    0xf8, 0x2a, 0xf7, 0x3c, 0x15, 0xfb, 0x08, 0xf0, 0xfb, 0x1b, 0xbe, 0xfb,
    0x2f, 0x8b, 0xfb, 0x2f, 0x8b, 0xfb, 0x1b, 0x58, 0xfb, 0x08, 0x26, 0x84,
    0x84, 0x88, 0x83, 0x8b, 0x82, 0x8b, 0x82, 0x8e, 0x83, 0x92, 0x84, 0x08,
    0xcf, 0x47, 0x05, 0x9a, 0x7e, 0x99, 0x8b, 0x9a, 0x98, 0xdf, 0xd3, 0xed,
    0xaf, 0xf7, 0x04, 0x8b, 0xf7, 0x04, 0x8b, 0xed, 0x67, 0xdf, 0x43, 0x9a,
    0x7e, 0x99, 0x8b, 0x9a, 0x98, 0x08, 0xcf, 0xcf, 0x05, 0x92, 0x92, 0x8e,
    0x93, 0x8b, 0x94, 0x8b, 0x94, 0x88, 0x93, 0x84, 0x92, 0x08, 0x0e, 0xf7,
    0xb0, 0xfa, 0xd4, 0xf8, 0xd4, 0x15, 0xfb, 0x14, 0xcb, 0xfb, 0x14, 0x4b,
    0xfb, 0x14, 0xfe, 0x54, 0xf8, 0x14, 0x07, 0xfa, 0x74, 0xf7, 0x14, 0x15,
    0xfe, 0x94, 0x06, 0x70, 0x8b, 0x75, 0x82, 0x78, 0x78, 0x78, 0x78, 0x82,
    0x75, 0x8b, 0x70, 0x08, 0xfc, 0x54, 0x07, 0x8b, 0x70, 0x94, 0x75, 0x9e,
    0x78, 0x9e, 0x78, 0xa1, 0x82, 0xa6, 0x8b, 0x08, 0xfa, 0x94, 0x06, 0xa6,
    0x8b, 0xa1, 0x94, 0x9e, 0x9e, 0x9e, 0x9e, 0x94, 0xa1, 0x8b, 0xa6, 0x08,
    0xab, 0x9b, 0x07, 0x98, 0x8b, 0x97, 0x90, 0x94, 0x94, 0x94, 0x94, 0x90,
    0x97, 0x8b, 0x98, 0x08, 0xf7, 0xb4, 0x07, 0x8b, 0x98, 0x86, 0x97, 0x82,
    0x94, 0x82, 0x94, 0x7f, 0x90, 0x7e, 0x8b, 0x08, 0x7b, 0xab, 0x06, 0x8b,
    0xa6, 0x82, 0xa1, 0x78, 0x9e, 0x78, 0x9e, 0x75, 0x94, 0x70, 0x8b, 0x08,
    0x2b, 0xfb, 0x54, 0x15, 0xfd, 0xd4, 0xfb, 0x94, 0xf9, 0xd4, 0x06, 0x0e,
    0xf7, 0xb0, 0xfa, 0xd4, 0xf8, 0xd4, 0x15, 0xfb, 0x14, 0xcb, 0xfb, 0x14,
    0x4b, 0xfb, 0x14, 0xfe, 0x54, 0xf8, 0x14, 0x07, 0xfa, 0x74, 0xf7, 0x14,
    0x15, 0xfe, 0x94, 0x06, 0x70, 0x8b, 0x75, 0x82, 0x78, 0x78, 0x78, 0x78,
    0x82, 0x75, 0x8b, 0x70, 0x08, 0xfc, 0x54, 0x07, 0x8b, 0x70, 0x94, 0x75,
    0x9e, 0x78, 0x9e, 0x78, 0xa1, 0x82, 0xa6, 0x8b, 0x08, 0xfa, 0x94, 0x06,
    0xa6, 0x8b, 0xa1, 0x94, 0x9e, 0x9e, 0x9e, 0x9e, 0x94, 0xa1, 0x8b, 0xa6,
    0x08, 0xab, 0x9b, 0x07, 0x98, 0x8b, 0x97, 0x90, 0x94, 0x94, 0x94, 0x94,
    0x90, 0x97, 0x8b, 0x98, 0x08, 0xf7, 0xb4, 0x07, 0x8b, 0x98, 0x86, 0x97,
    0x82, 0x94, 0x82, 0x94, 0x7f, 0x90, 0x7e, 0x8b, 0x08, 0x7b, 0xab, 0x06,
    0x8b, 0xa6, 0x82, 0xa1, 0x78, 0x9e, 0x78, 0x9e, 0x75, 0x94, 0x70, 0x8b,
    0x08, 0xfb, 0xb4, 0xfb, 0x54, 0x15, 0xfd, 0x14, 0xfb, 0x94, 0xf9, 0x14,
    0x06, 0x0e, 0xf7, 0xb0, 0xfa, 0xd4, 0xf8, 0xd4, 0x15, 0xfb, 0x14, 0xcb,
    0xfb, 0x14, 0x4b, 0xfb, 0x14, 0xfe, 0x54, 0xf8, 0x14, 0x07, 0xfa, 0x74,
    0xf7, 0x14, 0x15, 0xfe, 0x94, 0x06, 0x70, 0x8b, 0x75, 0x82, 0x78, 0x78,
    0x78, 0x78, 0x82, 0x75, 0x8b, 0x70, 0x08, 0xfc, 0x54, 0x07, 0x8b, 0x70,
    0x94, 0x75, 0x9e, 0x78, 0x9e, 0x78, 0xa1, 0x82, 0xa6, 0x8b, 0x08, 0xfa,
    0x94, 0x06, 0xa6, 0x8b, 0xa1, 0x94, 0x9e, 0x9e, 0x9e, 0x9e, 0x94, 0xa1,
    0x8b, 0xa6, 0x08, 0xab, 0x9b, 0x07, 0x98, 0x8b, 0x97, 0x90, 0x94, 0x94,
    0x94, 0x94, 0x90, 0x97, 0x8b, 0x98, 0x08, 0xf7, 0xb4, 0x07, 0x8b, 0x98,
    0x86, 0x97, 0x82, 0x94, 0x82, 0x94, 0x7f, 0x90, 0x7e, 0x8b, 0x08, 0x7b,
    0xab, 0x06, 0x8b, 0xa6, 0x82, 0xa1, 0x78, 0x9e, 0x78, 0x9e, 0x75, 0x94,
    0x70, 0x8b, 0x08, 0xfc, 0x74, 0xfb, 0x54, 0x15, 0xfc, 0x54, 0xfb, 0x94,
    0xf8, 0x54, 0x06, 0x0e, 0xf7, 0xb0, 0xfa, 0xd4, 0xf8, 0xd4, 0x15, 0xfb,
    0x14, 0xcb, 0xfb, 0x14, 0x4b, 0xfb, 0x14, 0xfe, 0x54, 0xf8, 0x14, 0x07,
    0xfa, 0x74, 0xf7, 0x14, 0x15, 0xfe, 0x94, 0x06, 0x70, 0x8b, 0x75, 0x82,
    0x78, 0x78, 0x78, 0x78, 0x82, 0x75, 0x8b, 0x70, 0x08, 0xfc, 0x54, 0x07,
    0x8b, 0x70, 0x94, 0x75, 0x9e, 0x78, 0x9e, 0x78, 0xa1, 0x82, 0xa6, 0x8b,
    0x08, 0xfa, 0x94, 0x06, 0xa6, 0x8b, 0xa1, 0x94, 0x9e, 0x9e, 0x9e, 0x9e,
    0x94, 0xa1, 0x8b, 0xa6, 0x08, 0xab, 0x9b, 0x07, 0x98, 0x8b, 0x97, 0x90,
    0x94, 0x94, 0x94, 0x94, 0x90, 0x97, 0x8b, 0x98, 0x08, 0xf7, 0xb4, 0x07,
    0x8b, 0x98, 0x86, 0x97, 0x82, 0x94, 0x82, 0x94, 0x7f, 0x90, 0x7e, 0x8b,
    0x08, 0x7b, 0xab, 0x06, 0x8b, 0xa6, 0x82, 0xa1, 0x78, 0x9e, 0x78, 0x9e,
    0x75, 0x94, 0x70, 0x8b, 0x08, 0xfd, 0x34, 0xfb, 0x54, 0x15, 0xfb, 0x94,
    0xfb, 0x94, 0xf7, 0x94, 0x06, 0x0e, 0xf7, 0xb0, 0xfa, 0xd4, 0xf8, 0xd4,
    0x15, 0xfb, 0x14, 0xcb, 0xfb, 0x14, 0x4b, 0xfb, 0x14, 0xfe, 0x54, 0xf8,
    0x14, 0x07, 0xfa, 0x74, 0xf7, 0x14, 0x15, 0xfe, 0x94, 0x06, 0x70, 0x8b,
    0x75, 0x82, 0x78, 0x78, 0x78, 0x78, 0x82, 0x75, 0x8b, 0x70, 0x08, 0xfc,
    0x54, 0x07, 0x8b, 0x70, 0x94, 0x75, 0x9e, 0x78, 0x9e, 0x78, 0xa1, 0x82,
    0xa6, 0x8b, 0x08, 0xfa, 0x94, 0x06, 0xa6, 0x8b, 0xa1, 0x94, 0x9e, 0x9e,
    0x9e, 0x9e, 0x94, 0xa1, 0x8b, 0xa6, 0x08, 0xab, 0x9b, 0x07, 0x98, 0x8b,
    0x97, 0x90, 0x94, 0x94, 0x94, 0x94, 0x90, 0x97, 0x8b, 0x98, 0x08, 0xf7,
    0xb4, 0x07, 0x8b, 0x98, 0x86, 0x97, 0x82, 0x94, 0x82, 0x94, 0x7f, 0x90,
    0x7e, 0x8b, 0x08, 0x7b, 0xab, 0x06, 0x8b, 0xa6, 0x82, 0xa1, 0x78, 0x9e,
    0x78, 0x9e, 0x75, 0x94, 0x70, 0x8b, 0x08, 0x0e, 0xf7, 0xb0, 0x1c, 0x05,
    0x04, 0xf8, 0x14, 0x15, 0x8b, 0x92, 0x88, 0x8f, 0x84, 0x8e, 0x08, 0xfb,
    0x46, 0xf7, 0x00, 0x05, 0x84, 0x8f, 0x85, 0x8b, 0x85, 0x87, 0x85, 0x87,
    0x88, 0x86, 0x8b, 0x84, 0x08, 0x45, 0xfd, 0x00, 0x07, 0x97, 0x9c, 0x9a,
    0xa8, 0x9c, 0xb3, 0x9c, 0xb3, 0x9b, 0xaa, 0x9a, 0xa1, 0x9a, 0xa1, 0x9b,
    0x96, 0x9c, 0x8b, 0x08, 0xc7, 0x06, 0x93, 0x77, 0x98, 0x7a, 0x9d, 0x7e,
    0x9d, 0x7e, 0x9f, 0x84, 0xa2, 0x8b, 0x9f, 0x8b, 0x9d, 0x90, 0x9b, 0x94,
    0x9b, 0x94, 0x98, 0x98, 0x95, 0x9c, 0x95, 0x9c, 0x90, 0x9c, 0x8b, 0x9e,
    0x8b, 0x9a, 0x88, 0x99, 0x85, 0x98, 0x85, 0x98, 0x83, 0x97, 0x82, 0x94,
    0x82, 0x94, 0x7f, 0x93, 0x7e, 0x91, 0x08, 0x7e, 0x91, 0x7d, 0x8e, 0x7c,
    0x8b, 0x74, 0x8b, 0x77, 0x84, 0x79, 0x7e, 0x79, 0x7e, 0x7e, 0x79, 0x83,
    0x76, 0x86, 0x8b, 0x83, 0x8b, 0x82, 0x8b, 0x70, 0x8c, 0x78, 0x8b, 0x7f,
    0x89, 0x7f, 0x89, 0x7d, 0x85, 0x7a, 0x81, 0x7a, 0x81, 0x7c, 0x7b, 0x7d,
    0x74, 0x7d, 0x74, 0x7b, 0x6b, 0x78, 0x62, 0x08, 0x83, 0x7a, 0x84, 0x7c,
    0x85, 0x7e, 0x85, 0x7e, 0x85, 0x80, 0x86, 0x82, 0x86, 0x82, 0x85, 0x83,
    0x85, 0x86, 0x85, 0x86, 0x87, 0x86, 0x88, 0x88, 0x88, 0x88, 0x86, 0x89,
    0x83, 0x8a, 0x83, 0x8a, 0x85, 0x8b, 0x88, 0x8a, 0x88, 0x8a, 0x83, 0x8b,
    0x80, 0x8c, 0x80, 0x8c, 0x82, 0x8b, 0x84, 0x8b, 0x08, 0x83, 0xaa, 0x7a,
    0xa4, 0x72, 0x9f, 0x72, 0x9f, 0x6d, 0x95, 0x6a, 0x8b, 0x64, 0x8b, 0x6a,
    0x7d, 0x6f, 0x6f, 0x6f, 0x6f, 0x7d, 0x6a, 0x8b, 0x64, 0x8b, 0x64, 0x99,
    0x6a, 0xa7, 0x6f, 0xa7, 0x6f, 0xac, 0x7d, 0xb2, 0x8b, 0xac, 0x8b, 0xa9,
    0x95, 0xa4, 0x9f, 0xa4, 0x9f, 0x9c, 0xa4, 0x93, 0xaa, 0x08, 0xf7, 0x5e,
    0x06, 0x9e, 0x8b, 0x9d, 0x7c, 0x9c, 0x6e, 0x9c, 0x6e, 0x9b, 0x6a, 0x98,
    0x67, 0x98, 0x67, 0x9f, 0x6a, 0xa5, 0x6e, 0xa5, 0x6e, 0xa9, 0x7c, 0xac,
    0x8b, 0x08, 0xc1, 0x55, 0x06, 0x8b, 0x7f, 0x91, 0x85, 0x97, 0x8b, 0x08,
    0xf7, 0x46, 0x06, 0x97, 0x8b, 0x91, 0x91, 0x8b, 0x97, 0x08, 0xf7, 0x46,
    0x07, 0x8b, 0x97, 0x85, 0x91, 0x7f, 0x8b, 0x08, 0xfb, 0x46, 0x06, 0x7f,
    0x8b, 0x85, 0x85, 0x8b, 0x7f, 0x08, 0x55, 0x55, 0x07, 0x7a, 0x8b, 0x7b,
    0x96, 0x7c, 0xa2, 0x7c, 0xa2, 0x7b, 0xaa, 0x7a, 0xb3, 0x7a, 0xb3, 0x7d,
    0xa8, 0x80, 0x9c, 0x08, 0xf8, 0x70, 0x43, 0x06, 0x8b, 0x84, 0x8e, 0x87,
    0x92, 0x88, 0x8e, 0x8a, 0x8d, 0x8a, 0x8e, 0x8b, 0x8e, 0x8b, 0x8e, 0x8c,
    0x8f, 0x8c, 0x08, 0xf7, 0x46, 0xf5, 0x05, 0x92, 0x8f, 0x8e, 0x90, 0x8b,
    0x92, 0x08, 0x0e, 0x27, 0xf8, 0xde, 0xf8, 0xbe, 0x15, 0x33, 0xe1, 0x8d,
    0xfb, 0x40, 0x05, 0x89, 0xfb, 0xf6, 0x15, 0xe1, 0xe1, 0x37, 0xe1, 0x05,
    0xf7, 0xe0, 0xe7, 0x15, 0x8b, 0xef, 0x82, 0xdf, 0x7a, 0xd0, 0x7a, 0xd0,
    0x71, 0xc0, 0x69, 0xb1, 0x69, 0xb1, 0x64, 0xa6, 0x5f, 0x9b, 0x5f, 0x9b,
    0x58, 0x93, 0x50, 0x8b, 0x4f, 0x8b, 0x56, 0x83, 0x5e, 0x7b, 0x5e, 0x7b,
    0x62, 0x70, 0x66, 0x66, 0x66, 0x66, 0x6f, 0x55, 0x78, 0x45, 0x78, 0x45,
    0x81, 0x36, 0x8b, 0x28, 0x08, 0x8b, 0x28, 0x95, 0x37, 0x9e, 0x47, 0x9e,
    0x47, 0xa8, 0x57, 0xb1, 0x67, 0xb1, 0x67, 0xb4, 0x72, 0xb8, 0x7c, 0xb8,
    0x7c, 0xc0, 0x84, 0xc8, 0x8b, 0xb3, 0x8b, 0xae, 0x8e, 0xaa, 0x91, 0xaa,
    0x91, 0xa9, 0x95, 0xa8, 0x99, 0xa8, 0x99, 0xa4, 0x9f, 0x9f, 0xa4, 0x9f,
    0xa4, 0x9d, 0xaa, 0x9b, 0xb0, 0x08, 0x9b, 0xb0, 0x97, 0xb7, 0x92, 0xc0,
    0x92, 0xc0, 0x8f, 0xc7, 0x8b, 0xcf, 0x08, 0xfb, 0xd0, 0x16, 0xf7, 0x3a,
    0xfb, 0x46, 0xfb, 0x92, 0xfb, 0x94, 0x87, 0xf7, 0xe8, 0xfb, 0x28, 0xfb,
    0x26, 0x55, 0xc1, 0xf7, 0x4e, 0xf7, 0x4c, 0xfb, 0x4e, 0xf7, 0x50, 0xc1,
    0xbf, 0xf7, 0x28, 0xfb, 0x26, 0x05, 0xf7, 0xf6, 0x07, 0xf7, 0x8e, 0xfb,
    0xa2, 0x05, 0x0e, 0x27, 0xcb, 0x6b, 0x15, 0x8b, 0x70, 0x94, 0x75, 0x9e,
    0x78, 0x9e, 0x78, 0xa1, 0x82, 0xa6, 0x8b, 0x08, 0xf8, 0xd4, 0x06, 0xa6,
    0x8b, 0xa1, 0x94, 0x9e, 0x9e, 0x9e, 0x9e, 0x94, 0xa1, 0x8b, 0xa6, 0x08,
    0xf9, 0x34, 0xfd, 0x94, 0x07, 0xf8, 0xb4, 0xfb, 0x34, 0x15, 0x8b, 0x94,
    0x8e, 0x93, 0x91, 0x91, 0x91, 0x91, 0x93, 0x8e, 0x94, 0x8b, 0x94, 0x8b,
    0x93, 0x88, 0x91, 0x85, 0x91, 0x85, 0x8e, 0x83, 0x8b, 0x82, 0x08, 0xfc,
    0x54, 0x07, 0x8b, 0x82, 0x88, 0x83, 0x85, 0x85, 0x85, 0x85, 0x83, 0x88,
    0x82, 0x8b, 0x82, 0x8b, 0x83, 0x8e, 0x85, 0x91, 0x85, 0x91, 0x88, 0x93,
    0x8b, 0x94, 0x08, 0xfb, 0x54, 0xf8, 0x54, 0x15, 0x8b, 0x94, 0x8e, 0x93,
    0x91, 0x91, 0x91, 0x91, 0x93, 0x8e, 0x94, 0x8b, 0x94, 0x8b, 0x93, 0x88,
    0x91, 0x85, 0x91, 0x85, 0x8e, 0x83, 0x8b, 0x82, 0x08, 0xfc, 0x54, 0x07,
    0x8b, 0x82, 0x88, 0x83, 0x85, 0x85, 0x85, 0x85, 0x83, 0x88, 0x82, 0x8b,
    0x82, 0x8b, 0x83, 0x8e, 0x85, 0x91, 0x85, 0x91, 0x88, 0x93, 0x8b, 0x94,
    0x08, 0xfb, 0x54, 0xf8, 0x54, 0x15, 0x8b, 0x94, 0x8e, 0x93, 0x91, 0x91,
    0x91, 0x91, 0x93, 0x8e, 0x94, 0x8b, 0x94, 0x8b, 0x93, 0x88, 0x91, 0x85,
    0x91, 0x85, 0x8e, 0x83, 0x8b, 0x82, 0x08, 0xfc, 0x54, 0x07, 0x8b, 0x82,
    0x88, 0x83, 0x85, 0x85, 0x85, 0x85, 0x83, 0x88, 0x82, 0x8b, 0x82, 0x8b,
    0x83, 0x8e, 0x85, 0x91, 0x85, 0x91, 0x88, 0x93, 0x8b, 0x94, 0x08, 0xf9,
    0x14, 0xf9, 0xb4, 0x15, 0xfb, 0x84, 0x06, 0x79, 0xb1, 0x05, 0x82, 0x9c,
    0x7c, 0x94, 0x77, 0x8b, 0x08, 0xfb, 0x78, 0x06, 0x77, 0x8b, 0x7c, 0x82,
    0x82, 0x7a, 0x08, 0x79, 0x65, 0x05, 0xfb, 0x84, 0x06, 0x82, 0x8b, 0x83,
    0x88, 0x85, 0x85, 0x85, 0x85, 0x88, 0x83, 0x8b, 0x82, 0x08, 0x4b, 0x07,
    0x8b, 0x82, 0x8e, 0x83, 0x91, 0x85, 0x91, 0x85, 0x93, 0x88, 0x94, 0x8b,
    0x08, 0xf9, 0xd4, 0x06, 0x94, 0x8b, 0x93, 0x8e, 0x91, 0x91, 0x91, 0x91,
    0x8e, 0x93, 0x8b, 0x94, 0x08, 0xcb, 0x07, 0x8b, 0x94, 0x88, 0x93, 0x85,
    0x91, 0x85, 0x91, 0x83, 0x8e, 0x82, 0x8b, 0x08, 0x0e, 0xa7, 0xf8, 0xda,
    0xf9, 0x5a, 0x15, 0xfc, 0xc0, 0xfc, 0xc0, 0x71, 0xfb, 0x78, 0x05, 0x8a,
    0x7b, 0x8f, 0x7e, 0x96, 0x80, 0x96, 0x80, 0x98, 0x87, 0x9b, 0x8c, 0x08,
    0xf7, 0x78, 0xa5, 0xf8, 0xc0, 0xf8, 0xc0, 0x05, 0xf7, 0x32, 0xf7, 0xba,
    0x15, 0xfb, 0x0c, 0xf7, 0x0c, 0x05, 0x78, 0x9e, 0x75, 0x94, 0x70, 0x8b,
    0x70, 0x8b, 0x75, 0x82, 0x78, 0x78, 0x08, 0xfb, 0x06, 0xfb, 0x06, 0xf7,
    0x94, 0xfb, 0x94, 0xf7, 0x06, 0xf7, 0x06, 0x05, 0x9e, 0x9e, 0x94, 0xa1,
    0x8b, 0xa6, 0x8b, 0xa6, 0x82, 0xa1, 0x78, 0x9e, 0x08, 0x0e, 0xf7, 0xb0,
    0x1c, 0x04, 0x80, 0xf9, 0x94, 0x15, 0xfd, 0x7a, 0x06, 0x68, 0x8b, 0x6d,
    0x7e, 0x72, 0x72, 0x08, 0xfb, 0xc2, 0xfb, 0xc0, 0x05, 0x7f, 0x7e, 0x85,
    0x7b, 0x8b, 0x7a, 0x8b, 0x7a, 0x91, 0x7b, 0x97, 0x7e, 0x08, 0xf7, 0xc2,
    0xfb, 0xc0, 0x05, 0xa4, 0x72, 0xa9, 0x7e, 0xae, 0x8b, 0x08, 0xf9, 0x7a,
    0x06, 0xaf, 0x8b, 0xa9, 0x97, 0xa4, 0xa4, 0xa4, 0xa4, 0x97, 0xa9, 0x8b,
    0xaf, 0x08, 0xf8, 0x94, 0x07, 0x8b, 0xaf, 0x7f, 0xa9, 0x72, 0xa4, 0x72,
    0xa4, 0x6d, 0x97, 0x67, 0x8b, 0x08, 0xfb, 0x3e, 0xfc, 0x90, 0x15, 0x9b,
    0x7c, 0x8b, 0x7c, 0x7b, 0x7b, 0x08, 0x5f, 0x5f, 0x05, 0x7b, 0x7b, 0x7c,
    0x8b, 0x7c, 0x9b, 0x08, 0xfb, 0x10, 0xf7, 0x10, 0xfb, 0x10, 0xfb, 0x10,
    0x05, 0x7c, 0x7b, 0x7c, 0x8b, 0x7b, 0x9b, 0x08, 0x5f, 0xb7, 0x05, 0x7b,
    0x9b, 0x8b, 0x9a, 0x9b, 0x9a, 0x08, 0xf7, 0x10, 0xf7, 0x10, 0xfb, 0x10,
    0xf7, 0x10, 0x05, 0x7b, 0x9a, 0x8b, 0x9a, 0x9b, 0x9b, 0x08, 0xb7, 0xb7,
    0x05, 0x9b, 0x9b, 0x9a, 0x8b, 0x9a, 0x7b, 0x08, 0xf7, 0x10, 0xfb, 0x10,
    0xf7, 0x10, 0xf7, 0x10, 0x05, 0x9a, 0x9b, 0x9a, 0x8b, 0x9b, 0x7b, 0x08,
    0xb7, 0x5f, 0x05, 0x9b, 0x7b, 0x8b, 0x7c, 0x7b, 0x7c, 0x08, 0xfb, 0x10,
    0xfb, 0x10, 0x05, 0x0e, 0xfb, 0x78, 0xf9, 0x14, 0xfa, 0x14, 0x15, 0xfc,
    0x14, 0x06, 0xfb, 0x94, 0xfb, 0x94, 0x05, 0xfd, 0x14, 0x07, 0x8b, 0x68,
    0x98, 0x6d, 0xa4, 0x72, 0xa4, 0x72, 0xa9, 0x7e, 0xae, 0x8b, 0x08, 0xf8,
    0x94, 0x06, 0xae, 0x8b, 0xa9, 0x98, 0xa4, 0xa4, 0xa4, 0xa4, 0x98, 0xa9,
    0x8b, 0xae, 0x08, 0xf9, 0x94, 0x07, 0x8b, 0xae, 0x7e, 0xa9, 0x72, 0xa4,
    0x72, 0xa4, 0x6d, 0x98, 0x68, 0x8b, 0x08, 0xfb, 0xd4, 0xfb, 0xd4, 0x15,
    0x2b, 0xf7, 0x54, 0xeb, 0x06, 0xf7, 0x34, 0xfb, 0x54, 0x15, 0x2b, 0xf7,
    0x54, 0xeb, 0x06, 0xf7, 0x34, 0xfb, 0x54, 0x15, 0x2b, 0xf7, 0x54, 0xeb,
    0x06, 0x0e, 0xad, 0xf7, 0x88, 0xd7, 0x15, 0x93, 0x83, 0x95, 0x87, 0x97,
    0x8b, 0x92, 0x8b, 0x91, 0x8c, 0x92, 0x8e, 0x9f, 0x93, 0x95, 0x9a, 0x8b,
    0xa0, 0x08, 0xf7, 0x14, 0xf9, 0x24, 0x07, 0x98, 0x8b, 0x97, 0x90, 0x94,
    0x94, 0x94, 0x94, 0x90, 0x97, 0x8b, 0x98, 0x08, 0xf8, 0x1c, 0x07, 0x8b,
    0x96, 0x86, 0x92, 0x80, 0x8f, 0x80, 0x8f, 0x83, 0x89, 0x86, 0x83, 0x08,
    0xfb, 0x04, 0xfb, 0x04, 0x05, 0x86, 0x87, 0x88, 0x86, 0x8b, 0x84, 0x08,
    0xfb, 0x3c, 0xfc, 0xb4, 0xf7, 0x14, 0x07, 0x8b, 0xa0, 0x81, 0x9a, 0x77,
    0x93, 0x84, 0x8e, 0x85, 0x8c, 0x84, 0x8b, 0x7f, 0x8b, 0x81, 0x87, 0x83,
    0x83, 0x08, 0xfb, 0x74, 0xfb, 0x64, 0x05, 0x80, 0x80, 0x86, 0x7f, 0x8b,
    0x7e, 0x8b, 0x7e, 0x90, 0x7f, 0x96, 0x80, 0x08, 0x0e, 0x7c, 0x8b, 0x06,
    0xf7, 0x5c, 0x14, 0xfa, 0x78, 0x15, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x02, 0xc0, 0x00, 0x00, 0x04, 0x00, 0x00, 0x10,
    0x04, 0x00, 0x00, 0x20, 0x04, 0x80, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
    0x04, 0x80, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x04, 0x80, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
    0x03, 0x80, 0x00, 0x80, 0x03, 0x80, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00,
    0x03, 0x80, 0x00, 0x00, 0x03, 0x80, 0x00, 0x80, 0x03, 0x80, 0xff, 0xf0,
    0x02, 0x80, 0x00, 0x36, 0x02, 0x80, 0x00, 0x36, 0x03, 0x80, 0x00, 0x00,
    0x03, 0x80, 0x00, 0x00, 0x04, 0x80, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
    0x04, 0x80, 0xff, 0xf2, 0x04, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x0c,
    0x03, 0x80, 0x00, 0x0c, 0x05, 0x00, 0x00, 0x06, 0x04, 0x00, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0xff, 0xf8, 0x03, 0x80, 0x00, 0x00,
    0x03, 0x80, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x02, 0x80, 0xff, 0xfe,
    0x03, 0x80, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x04, 0x80, 0x00, 0x00,
    0x04, 0x00, 0xff, 0xf8, 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
    0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
    0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
    0x03, 0x80, 0x00, 0x40, 0x03, 0x80, 0x00, 0x00, 0x04, 0x00, 0xff, 0xfe,
    0x05, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x06, 0x00, 0x02
};



typedef struct lv_font_fmt_win_gdi_dsc_struct
{
    HDC FontDCHandle;
    HDC SymbolFontDCHandle;
    //TEXTMETRICW TextMetrics;
    OUTLINETEXTMETRICW OutlineTextMetrics;
    std::map<std::uint32_t, std::pair<GLYPHMETRICS, std::uint8_t*>> GlyphSet;
} lv_font_fmt_win_gdi_dsc_t;

void win_gdi_add_glyph(
    lv_font_fmt_win_gdi_dsc_t* dsc,
    std::uint32_t UnicodeLetter)
{
    MAT2 TransformationMatrix;
    TransformationMatrix.eM11.fract = 0;
    TransformationMatrix.eM11.value = 1;
    TransformationMatrix.eM12.fract = 0;
    TransformationMatrix.eM12.value = 0;
    TransformationMatrix.eM21.fract = 0;
    TransformationMatrix.eM21.value = 0;
    TransformationMatrix.eM22.fract = 0;
    TransformationMatrix.eM22.value = 1;

    bool IsSymbol = false;
    switch (UnicodeLetter)
    {
    case 61441:
    case 61448:
    case 61451:
    case 61452:
    case 61453:
    case 61457:
    case 61459:
    case 61461:
    case 61465:
    case 61468:
    case 61473:
    case 61478:
    case 61479:
    case 61480:
    case 61502:
    case 61512:
    case 61515:
    case 61516:
    case 61517:
    case 61521:
    case 61522:
    case 61523:
    case 61524:
    case 61543:
    case 61544:
    case 61550:
    case 61552:
    case 61553:
    case 61556:
    case 61559:
    case 61560:
    case 61561:
    case 61563:
    case 61587:
    case 61589:
    case 61636:
    case 61637:
    case 61639:
    case 61671:
    case 61674:
    case 61683:
    case 61724:
    case 61732:
    case 61787:
    case 61931:
    case 62016:
    case 62017:
    case 62018:
    case 62019:
    case 62020:
    case 62087:
    case 62099:
    case 62212:
    case 62189:
    case 62810:
    case 63426:
    case 63650:
    case 20042:
        IsSymbol = true;
    default:
        break;
    }

    wchar_t InBuffer[2];
    InBuffer[0] = static_cast<wchar_t>(UnicodeLetter);
    InBuffer[1] = L'\0';

    WORD OutBuffer[2];
    OutBuffer[0] = 0;
    OutBuffer[1] = 0;

    if (::GetGlyphIndicesW(
        IsSymbol ? dsc->SymbolFontDCHandle : dsc->FontDCHandle,
        InBuffer,
        1,
        OutBuffer,
        GGI_MARK_NONEXISTING_GLYPHS) == GDI_ERROR)
    {
        return;
    }

    GLYPHMETRICS GlyphMetrics;
    uint8_t* GlyphBitmap = nullptr;

    DWORD Length = ::GetGlyphOutlineW(
        IsSymbol ? dsc->SymbolFontDCHandle : dsc->FontDCHandle,
        OutBuffer[0],
        GGO_GRAY8_BITMAP | GGO_GLYPH_INDEX,
        &GlyphMetrics,
        0,
        nullptr,
        &TransformationMatrix);
    if (Length != GDI_ERROR)
    {
        if (Length > 0)
        {
            GlyphBitmap = new uint8_t[Length];
            if (GlyphBitmap)
            {
                if (::GetGlyphOutlineW(
                    IsSymbol ? dsc->SymbolFontDCHandle : dsc->FontDCHandle,
                    OutBuffer[0],
                    GGO_GRAY8_BITMAP | GGO_GLYPH_INDEX,
                    &GlyphMetrics,
                    Length,
                    GlyphBitmap,
                    &TransformationMatrix) != GDI_ERROR)
                {
                    for (size_t i = 0; i < Length; ++i)
                    {
                        GlyphBitmap[i] =
                            GlyphBitmap[i] == 0x40
                            ? 0xFF
                            : GlyphBitmap[i] << 2;
                    }
                }
            }
        }

        dsc->GlyphSet.emplace(std::make_pair(
            UnicodeLetter,
            std::make_pair(GlyphMetrics, GlyphBitmap)));
    }
}

bool win_gdi_get_glyph_dsc(
    const lv_font_t* font,
    lv_font_glyph_dsc_t* dsc_out,
    uint32_t unicode_letter,
    uint32_t unicode_letter_next)
{
    unicode_letter_next;

    lv_font_fmt_win_gdi_dsc_t* dsc =
        reinterpret_cast<lv_font_fmt_win_gdi_dsc_t*>(font->dsc);

    auto iterator = dsc->GlyphSet.find(unicode_letter);
    if (iterator == dsc->GlyphSet.end())
    {
        ::win_gdi_add_glyph(
            dsc,
            unicode_letter);

        iterator = dsc->GlyphSet.find(unicode_letter);
        if (iterator == dsc->GlyphSet.end())
        {
            return false;
        }
    }

    GLYPHMETRICS& GlyphMetrics = iterator->second.first;

    /*int face__glyph__bitmap__rows = dsc->TextMetrics.tmHeight;
    int face__glyph__bitmap__width = dsc->TextMetrics.tmMaxCharWidth;
    int face__glyph__bitmap_left = 0;
    int face__glyph__bitmap_top = -dsc->TextMetrics.tmAscent;*/

    dsc_out->adv_w = GlyphMetrics.gmCellIncX;
    dsc_out->box_w = static_cast<std::uint16_t>(
        (GlyphMetrics.gmBlackBoxX + 0x0003) & 0xFFFC);
    dsc_out->box_h = static_cast<std::uint16_t>(
        GlyphMetrics.gmBlackBoxY);
    dsc_out->ofs_x = static_cast<std::int16_t>(
        GlyphMetrics.gmptGlyphOrigin.x);
    dsc_out->ofs_y = static_cast<std::int16_t>(
        GlyphMetrics.gmptGlyphOrigin.y - GlyphMetrics.gmBlackBoxY);
    dsc_out->bpp = 8;

    /*OUTLINETEXTMETRICW OutlineTextMetrics;
    if (::GetOutlineTextMetricsW(
        dsc->FontDCHandle,
        sizeof(OUTLINETEXTMETRICW),
        &OutlineTextMetrics))
    {
        dsc_out->adv_w = GlyphMetrics.gmCellIncX;
        dsc_out->box_w = static_cast<std::uint16_t>(
            (GlyphMetrics.gmBlackBoxX + 0x0003) & ~0x0003);
        dsc_out->box_h = static_cast<std::uint16_t>(
            GlyphMetrics.gmBlackBoxY);
        dsc_out->ofs_x = static_cast<std::int16_t>(
            GlyphMetrics.gmptGlyphOrigin.x);
        dsc_out->ofs_y = static_cast<std::int16_t>(
            GlyphMetrics.gmptGlyphOrigin.y - GlyphMetrics.gmBlackBoxY);
    }*/

    //dsc_out->adv_w = static_cast<std::uint16_t>(
    //    GlyphMetrics.gmCellIncX);
    //dsc_out->box_w = static_cast<std::uint16_t>(
    //    (face__glyph__bitmap__width + 3) & ~0x0003);
    //    //face__glyph__bitmap__width);
    //dsc_out->box_h = static_cast<std::uint16_t>(
    //    face__glyph__bitmap__rows);
    //dsc_out->ofs_x = static_cast<std::uint16_t>(
    //    face__glyph__bitmap_left);
    //dsc_out->ofs_y = static_cast<std::uint16_t>(
    //    face__glyph__bitmap_top - face__glyph__bitmap__rows);
    //dsc_out->bpp = 8;

    return true;
}

const uint8_t* win_gdi_get_glyph_bitmap(
    const lv_font_t* font,
    uint32_t unicode_letter)
{
    lv_font_fmt_win_gdi_dsc_t* dsc =
        reinterpret_cast<lv_font_fmt_win_gdi_dsc_t*>(font->dsc);

    auto iterator = dsc->GlyphSet.find(unicode_letter);
    if (iterator == dsc->GlyphSet.end())
    {
        ::win_gdi_add_glyph(
            dsc,
            unicode_letter);

        iterator = dsc->GlyphSet.find(unicode_letter);
        if (iterator == dsc->GlyphSet.end())
        {
            return nullptr;
        }
    }

    return iterator->second.second;
}

lv_font_t* lv_win_gdi_create_font(
    _In_ HWND WindowHandle,
    _In_ int FontSize,
    _In_opt_ LPCWSTR FontName)
{
    HDC FontDCHandle = ::GetDC(WindowHandle);
    if (FontDCHandle)
    {
        HFONT FontHandle = ::CreateFontW(
            -FontSize,                  // nHeight
            0,                         // nWidth
            0,                         // nEscapement
            0,                         // nOrientation
            FW_NORMAL,                 // nWeight
            FALSE,                     // bItalic
            FALSE,                     // bUnderline
            0,                         // cStrikeOut
            ANSI_CHARSET,              // nCharSet
            OUT_DEFAULT_PRECIS,        // nOutPrecision
            CLIP_DEFAULT_PRECIS,       // nClipPrecision
            CLEARTYPE_NATURAL_QUALITY, // nQuality
            FF_DONTCARE,  // nPitchAndFamily
            FontName);
        if (FontHandle)
        {
            ::DeleteObject(::SelectObject(FontDCHandle, FontHandle));
            ::DeleteObject(FontHandle);
        }
        else
        {
            ::ReleaseDC(WindowHandle, FontDCHandle);
            FontDCHandle = nullptr;
        }
    }

    if (!FontDCHandle)
    {
        return nullptr;
    }

    HDC SymbolFontDCHandle = ::GetDC(WindowHandle);
    if (SymbolFontDCHandle)
    {
        HFONT SymbolFontHandle = ::CreateFontW(
            -FontSize,                  // nHeight
            0,                         // nWidth
            0,                         // nEscapement
            0,                         // nOrientation
            FW_NORMAL,                 // nWeight
            FALSE,                     // bItalic
            FALSE,                     // bUnderline
            0,                         // cStrikeOut
            ANSI_CHARSET,              // nCharSet
            OUT_DEFAULT_PRECIS,        // nOutPrecision
            CLIP_DEFAULT_PRECIS,       // nClipPrecision
            CLEARTYPE_NATURAL_QUALITY, // nQuality
            FF_DONTCARE,  // nPitchAndFamily
            L"Font Awesome 5 Free for LVGL");
        if (SymbolFontHandle)
        {
            ::DeleteObject(::SelectObject(SymbolFontDCHandle, SymbolFontHandle));
            ::DeleteObject(SymbolFontHandle);
        }
        else
        {
            ::ReleaseDC(WindowHandle, SymbolFontDCHandle);
            SymbolFontDCHandle = nullptr;
        }
    }

    if (!SymbolFontDCHandle)
    {
        return nullptr;
    }

    lv_font_t* font = new lv_font_t();
    if (!font)
    {
        return nullptr;
    }

    lv_font_fmt_win_gdi_dsc_t* dsc = new lv_font_fmt_win_gdi_dsc_t();
    if (!dsc)
    {
        delete font;
        return nullptr;
    }

    dsc->FontDCHandle = FontDCHandle;

    dsc->SymbolFontDCHandle = SymbolFontDCHandle;

    /*if (::GetTextMetricsW(dsc->FontDCHandle, &dsc->TextMetrics))
    {
        font->get_glyph_dsc = ::win_gdi_get_glyph_dsc;
        font->get_glyph_bitmap = ::win_gdi_get_glyph_bitmap;
        font->line_height = static_cast<lv_coord_t>(
            dsc->TextMetrics.tmHeight);
        font->base_line = static_cast<lv_coord_t>(
            dsc->TextMetrics.tmDescent);
        font->subpx = LV_FONT_SUBPX_NONE;
        font->underline_position = 0;
        font->underline_thickness = 0;
        font->dsc = dsc;
    }

    OUTLINETEXTMETRICW OutlineTextMetrics;
    if (::GetOutlineTextMetricsW(
        dsc->FontDCHandle,
        sizeof(OUTLINETEXTMETRICW),
        &OutlineTextMetrics))
    {
        font->line_height = static_cast<lv_coord_t>(
            OutlineTextMetrics.otmLineGap - OutlineTextMetrics.otmDescent + OutlineTextMetrics.otmAscent);
        font->base_line = static_cast<lv_coord_t>(
            -OutlineTextMetrics.otmDescent);
        font->underline_position = static_cast<std::int8_t>(
            OutlineTextMetrics.otmsUnderscorePosition);
        font->underline_thickness = static_cast<std::int8_t>(
            OutlineTextMetrics.otmsUnderscoreSize);
    }*/

    if (::GetOutlineTextMetricsW(
        dsc->FontDCHandle,
        sizeof(OUTLINETEXTMETRICW),
        &dsc->OutlineTextMetrics))
    {
        font->get_glyph_dsc = ::win_gdi_get_glyph_dsc;
        font->get_glyph_bitmap = ::win_gdi_get_glyph_bitmap;
        font->line_height = static_cast<lv_coord_t>(
            dsc->OutlineTextMetrics.otmLineGap
            - dsc->OutlineTextMetrics.otmDescent
            + dsc->OutlineTextMetrics.otmAscent);
        font->base_line = static_cast<lv_coord_t>(
            -dsc->OutlineTextMetrics.otmDescent);
        font->subpx = LV_FONT_SUBPX_NONE;
        font->underline_position = static_cast<std::int8_t>(
            dsc->OutlineTextMetrics.otmsUnderscorePosition);
        font->underline_thickness = static_cast<std::int8_t>(
            dsc->OutlineTextMetrics.otmsUnderscoreSize);
        font->dsc = dsc; 
    }


    return font;
}

static HINSTANCE g_InstanceHandle = nullptr;
static int volatile g_WindowWidth = 0;
static int volatile g_WindowHeight = 0;
static HWND g_WindowHandle = nullptr;
static int volatile g_WindowDPI = USER_DEFAULT_SCREEN_DPI;

static HDC g_BufferDCHandle = nullptr;
static UINT32* g_PixelBuffer = nullptr;
static SIZE_T g_PixelBufferSize = 0;

static lv_disp_t* lv_windows_disp;

static bool volatile g_MousePressed;
static LPARAM volatile g_MouseValue = 0;

static bool volatile g_MouseWheelPressed = false;
static int16_t volatile g_MouseWheelValue = 0;

void win_drv_flush(
    lv_disp_drv_t* disp_drv,
    const lv_area_t* area,
    lv_color_t* color_p)
{
    area;
    color_p;

    if (::lv_disp_flush_is_last(disp_drv))
    {
        HDC hWindowDC = ::GetDC(g_WindowHandle);
        if (hWindowDC)
        {
            ::BitBlt(
                hWindowDC,
                0,
                0,
                g_WindowWidth,
                g_WindowHeight,
                g_BufferDCHandle,
                0,
                0,
                SRCCOPY);

            ::ReleaseDC(g_WindowHandle, hWindowDC);
        }


        
    }

    ::lv_disp_flush_ready(disp_drv);
}

void win_drv_rounder_cb(
    lv_disp_drv_t* disp_drv,
    lv_area_t* area)
{
    area->x1 = 0;
    area->x2 = disp_drv->hor_res - 1;
    area->y1 = 0;
    area->y2 = disp_drv->ver_res - 1;
}

void lv_create_display_driver(
    lv_disp_drv_t* disp_drv,
    int hor_res,
    int ver_res)
{
    ::lv_disp_drv_init(disp_drv);

    HDC hNewBufferDC = ::LvglCreateFrameBuffer(
        g_WindowHandle,
        hor_res,
        ver_res,
        &g_PixelBuffer,
        &g_PixelBufferSize);

    ::DeleteDC(g_BufferDCHandle);
    g_BufferDCHandle = hNewBufferDC;

    lv_disp_buf_t* disp_buf = new lv_disp_buf_t();
    ::lv_disp_buf_init(
        disp_buf,
        g_PixelBuffer,
        nullptr,
        hor_res * ver_res);

    disp_drv->hor_res = static_cast<lv_coord_t>(hor_res);
    disp_drv->ver_res = static_cast<lv_coord_t>(ver_res);
    disp_drv->flush_cb = ::win_drv_flush;
    disp_drv->buffer = disp_buf;
    disp_drv->dpi = g_WindowDPI;
    disp_drv->rounder_cb = win_drv_rounder_cb;
}

bool win_drv_read(
    lv_indev_drv_t* indev_drv,
    lv_indev_data_t* data)
{
    indev_drv;

    data->state = static_cast<lv_indev_state_t>(
        g_MousePressed ? LV_INDEV_STATE_PR : LV_INDEV_STATE_REL);
    data->point.x = GET_X_LPARAM(g_MouseValue);
    data->point.y = GET_Y_LPARAM(g_MouseValue);
    return false;
}

std::queue<std::pair<std::uint32_t, ::lv_indev_state_t>> key_queue;
std::queue<std::pair<std::uint32_t, ::lv_indev_state_t>> char_queue;
std::mutex kb_mutex;

bool win_kb_read(lv_indev_drv_t* indev_drv, lv_indev_data_t* data)
{
    (void)indev_drv;      /*Unused*/

    std::lock_guard guard(kb_mutex);

    if (!char_queue.empty())
    {
        auto current = char_queue.front();

        data->key = current.first;
        data->state = current.second;

        char_queue.pop();
    }
    else if (!key_queue.empty())
    {
        auto current = key_queue.front();

        switch (current.first)
        {
        case VK_UP:
            data->key = LV_KEY_UP;
            break;
        case VK_DOWN:
            data->key = LV_KEY_DOWN;
            break;
        case VK_LEFT:
            data->key = LV_KEY_LEFT;
            break;
        case VK_RIGHT:
            data->key = LV_KEY_RIGHT;
            break;
        case VK_ESCAPE:
            data->key = LV_KEY_ESC;
            break;
        case VK_DELETE:
            data->key = LV_KEY_DEL;
            break;
        case VK_BACK:
            data->key = LV_KEY_BACKSPACE;
            break;
        case VK_RETURN:
            data->key = LV_KEY_ENTER;
            break;
        case VK_NEXT:
            data->key = LV_KEY_NEXT;
            break;
        case VK_PRIOR:
            data->key = LV_KEY_PREV;
            break;
        case VK_HOME:
            data->key = LV_KEY_HOME;
            break;
        case VK_END:
            data->key = LV_KEY_END;
            break;
        default:
            data->key = 0;
            break;
        }
        
        data->state = current.second;

        key_queue.pop();
    }

    return false;
}

bool win_mousewheel_read(lv_indev_drv_t* indev_drv, lv_indev_data_t* data)
{
    (void)indev_drv;      /*Unused*/

    data->state = static_cast<lv_indev_state_t>(
        g_MouseWheelPressed ? LV_INDEV_STATE_PR : LV_INDEV_STATE_REL);
    data->enc_diff = g_MouseWheelValue;
    g_MouseWheelValue = 0;

    return false;       /*No more data to read so return false*/
}

LRESULT CALLBACK WndProc(
    _In_ HWND   hWnd,
    _In_ UINT   uMsg,
    _In_ WPARAM wParam,
    _In_ LPARAM lParam)
{
    switch (uMsg)
    {
    case WM_MOUSEMOVE:
    case WM_LBUTTONDOWN:
    case WM_LBUTTONUP:
    case WM_MBUTTONDOWN:
    case WM_MBUTTONUP:
    {
        g_MouseValue = lParam;
        if (uMsg == WM_LBUTTONDOWN || uMsg == WM_LBUTTONUP)
        {
            g_MousePressed = (uMsg == WM_LBUTTONDOWN);
        }
        else if (uMsg == WM_MBUTTONDOWN || uMsg == WM_MBUTTONUP)
        {
            g_MouseWheelPressed = (uMsg == WM_MBUTTONDOWN);
        }
        return 0;
    }
    case WM_KEYDOWN:
    case WM_KEYUP:
    {
        std::lock_guard guard(kb_mutex);

        key_queue.push(
            std::make_pair(
                static_cast<std::uint32_t>(wParam),
                static_cast<lv_indev_state_t>(
                    (uMsg == WM_KEYUP)
                    ? LV_INDEV_STATE_REL
                    : LV_INDEV_STATE_PR)));

        break;
    }
    case WM_CHAR:
    {
        std::lock_guard guard(kb_mutex);

        char_queue.push(std::make_pair(
            static_cast<std::uint32_t>(wParam),
            static_cast<lv_indev_state_t>(LV_INDEV_STATE_PR)));

        break;
    }
    case WM_MOUSEWHEEL:
    {
        g_MouseWheelValue = -(GET_WHEEL_DELTA_WPARAM(wParam) / WHEEL_DELTA);
        break;
    }
    case WM_SIZE:
    {
        if (wParam != SIZE_MINIMIZED)
        {
            int CurrentWindowWidth = LOWORD(lParam);
            int CurrentWindowHeight = HIWORD(lParam);
            if (CurrentWindowWidth != g_WindowWidth ||
                CurrentWindowHeight != g_WindowHeight)
            {
                g_WindowWidth = CurrentWindowWidth;
                g_WindowHeight = CurrentWindowHeight;
;
                lv_disp_buf_t* old_disp_buf = lv_windows_disp->driver.buffer;

                lv_disp_drv_t disp_drv;
                ::lv_create_display_driver(&disp_drv, g_WindowWidth, g_WindowHeight);
                ::lv_disp_drv_update(lv_windows_disp, &disp_drv);
                delete old_disp_buf;
            }
        }
        break;
    }
    case WM_ERASEBKGND:
    {
        ::lv_refr_now(lv_windows_disp);
        return TRUE;
    }
    case WM_DPICHANGED:
    {
        g_WindowDPI = HIWORD(wParam);

        // Resize the window
        auto lprcNewScale = reinterpret_cast<RECT*>(lParam);

        ::SetWindowPos(
            hWnd,
            nullptr,
            lprcNewScale->left,
            lprcNewScale->top,
            lprcNewScale->right - lprcNewScale->left,
            lprcNewScale->bottom - lprcNewScale->top,
            SWP_NOZORDER | SWP_NOACTIVATE);

        break;
    }
    case WM_DESTROY:
        ::PostQuitMessage(0);
        break;
    default:
        return ::DefWindowProcW(hWnd, uMsg, wParam, lParam);
    }

    return 0;
}

bool g_WindowQuitSignal = false;

static void win_msg_handler(lv_task_t* param)
{
    param;

    MSG Message;
    BOOL Result = ::PeekMessageW(&Message, nullptr, 0, 0, TRUE);
    if (Result != 0 && Result != -1)
    {
        ::TranslateMessage(&Message);
        ::DispatchMessageW(&Message);

        if (Message.message == WM_QUIT)
        {
            g_WindowQuitSignal = true;
        }
    }
}

bool win_hal_init(
    _In_ HINSTANCE hInstance,
    _In_ int nShowCmd)
{
    WNDCLASSEXW WindowClass;

    WindowClass.cbSize = sizeof(WNDCLASSEX);

    WindowClass.style = 0;
    WindowClass.lpfnWndProc = ::WndProc;
    WindowClass.cbClsExtra = 0;
    WindowClass.cbWndExtra = 0;
    WindowClass.hInstance = hInstance;
    WindowClass.hIcon = nullptr;
    WindowClass.hCursor = ::LoadCursorW(nullptr, IDC_ARROW);
    WindowClass.hbrBackground = reinterpret_cast<HBRUSH>(COLOR_WINDOW + 1);
    WindowClass.lpszMenuName = nullptr;
    WindowClass.lpszClassName = L"lv_port_windows";
    WindowClass.hIconSm = nullptr;

    if (!::RegisterClassExW(&WindowClass))
    {
        return false;
    }

    g_InstanceHandle = hInstance;

    g_WindowHandle = ::CreateWindowExW(
        WS_EX_CLIENTEDGE,
        WindowClass.lpszClassName,
        L"LVGL ported to Windows Desktop",
        WS_OVERLAPPEDWINDOW,
        CW_USEDEFAULT,
        0,
        CW_USEDEFAULT,
        0,
        nullptr,
        nullptr,
        hInstance,
        nullptr);

    if (!g_WindowHandle)
    {
        return false;
    }

    ::lv_task_create(win_msg_handler, 0, LV_TASK_PRIO_HIGHEST, nullptr);

    ::LvglEnableChildWindowDpiMessage(g_WindowHandle);
    g_WindowDPI = ::LvglGetDpiForWindow(g_WindowHandle);

    lv_disp_drv_t disp_drv;
    ::lv_create_display_driver(&disp_drv, g_WindowWidth, g_WindowHeight);
    lv_windows_disp = ::lv_disp_drv_register(&disp_drv);

    lv_indev_drv_t indev_drv;
    ::lv_indev_drv_init(&indev_drv);
    indev_drv.type = LV_INDEV_TYPE_POINTER;
    indev_drv.read_cb = ::win_drv_read;
    ::lv_indev_drv_register(&indev_drv);

    lv_indev_drv_t kb_drv;
    lv_indev_drv_init(&kb_drv);
    kb_drv.type = LV_INDEV_TYPE_KEYPAD;
    kb_drv.read_cb = win_kb_read;
    ::lv_indev_drv_register(&kb_drv);

    lv_indev_drv_t enc_drv;
    lv_indev_drv_init(&enc_drv);
    enc_drv.type = LV_INDEV_TYPE_ENCODER;
    enc_drv.read_cb = win_mousewheel_read;
    ::lv_indev_drv_register(&enc_drv);


    DWORD NumFonts = 0;
    ::AddFontMemResourceEx(
        const_cast<std::uint8_t*>(SymbolFontResource),
        sizeof(SymbolFontResource),
        nullptr,
        &NumFonts);


    wchar_t font_name[] = L"Segoe UI";

    lv_font_t* font_small = lv_win_gdi_create_font(
        g_WindowHandle,
        12,
        font_name);

    lv_font_t* font_normal = lv_win_gdi_create_font(
        g_WindowHandle,
        16,
        font_name);

    lv_font_t* font_subtitle = lv_win_gdi_create_font(
        g_WindowHandle,
        20,
        font_name);

    lv_font_t* font_title = lv_win_gdi_create_font(
        g_WindowHandle,
        24,
        font_name);

    ::lv_theme_set_act(::lv_theme_material_init(
        ::lv_color_hex(0x01a2b1),
        ::lv_color_hex(0x44d1b6),
        LV_THEME_MATERIAL_FLAG_LIGHT,
        font_small,
        font_normal,
        font_subtitle,
        font_title));

    ::ShowWindow(g_WindowHandle, nShowCmd);
    ::UpdateWindow(g_WindowHandle);
   
    return true;
}

int WINAPI wWinMain(
    _In_ HINSTANCE hInstance,
    _In_opt_ HINSTANCE hPrevInstance,
    _In_ LPWSTR lpCmdLine,
    _In_ int nShowCmd)
{
    UNREFERENCED_PARAMETER(hPrevInstance);
    UNREFERENCED_PARAMETER(lpCmdLine);

    ::lv_init();

    if (!win_hal_init(hInstance, nShowCmd))
    {
        return -1;
    }

    ::lv_demo_widgets();
    //::lv_demo_keypad_encoder();
    //::lv_demo_benchmark();

    /*std::thread([]()
    {
        while (!g_WindowQuitSignal)
        {
            if (!::lv_disp_flush_is_last(&lv_windows_disp->driver))
            {
                continue;
            }

            MONITORINFOEX MonitorInfo;
            MonitorInfo.cbSize = sizeof(MONITORINFOEX);
            if (::GetMonitorInfoW(
                ::MonitorFromWindow(g_WindowHandle, MONITOR_DEFAULTTONEAREST),
                &MonitorInfo))
            {
                HDC hMonitorDC = CreateDCW(
                    nullptr,
                    MonitorInfo.szDevice,
                    nullptr,
                    nullptr);
                if (hMonitorDC)
                {
                    D3DKMT_OPENADAPTERFROMHDC OpenAdapterFromHdc;
                    OpenAdapterFromHdc.hDc = hMonitorDC;
                    if (::D3DKMTOpenAdapterFromHdc(&OpenAdapterFromHdc) == 0)
                    {
                        D3DKMT_WAITFORVERTICALBLANKEVENT WaitForVerticalBlankEvent;
                        WaitForVerticalBlankEvent.hAdapter = OpenAdapterFromHdc.hAdapter;
                        WaitForVerticalBlankEvent.hDevice = 0;
                        WaitForVerticalBlankEvent.VidPnSourceId = OpenAdapterFromHdc.VidPnSourceId;
                        if (::D3DKMTWaitForVerticalBlankEvent(&WaitForVerticalBlankEvent) == 0)
                        {
                            HDC hWindowDC = ::GetDC(g_WindowHandle);
                            if (hWindowDC)
                            {
                                ::BitBlt(
                                    hWindowDC,
                                    0,
                                    0,
                                    g_WindowWidth,
                                    g_WindowHeight,
                                    g_BufferDCHandle,
                                    0,
                                    0,
                                    SRCCOPY);

                                ::ReleaseDC(g_WindowHandle, hWindowDC);
                            }
                        }

                        D3DKMT_CLOSEADAPTER CloseAdapter;
                        CloseAdapter.hAdapter = OpenAdapterFromHdc.hAdapter;
                        ::D3DKMTCloseAdapter(&CloseAdapter);
                    }

                    ::DeleteDC(hMonitorDC);
                }
            }
        }

    }).detach();*/

    /*std::thread([]()
    {
        while (!g_WindowQuitSignal)
        {
            if (!::lv_disp_flush_is_last(&lv_windows_disp->driver))
            {
                continue;
            }

            ::DwmFlush();

            HDC hWindowDC = ::GetDC(g_WindowHandle);
            if (hWindowDC)
            {
                ::BitBlt(
                    hWindowDC,
                    0,
                    0,
                    g_WindowWidth,
                    g_WindowHeight,
                    g_BufferDCHandle,
                    0,
                    0,
                    SRCCOPY);

                ::ReleaseDC(g_WindowHandle, hWindowDC);
            }
        }

    }).detach();*/

    while (!g_WindowQuitSignal)
    {
        ::lv_task_handler();
        ::Sleep(10);
    }

    return 0;
}
